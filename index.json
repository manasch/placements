[{"content":"Amadeus Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 80% XII 80% UG 7.5 GPA Compensation FTE Internship Base 10,00,000 \u0026ndash; Allowance (One Time) 1,50,000 \u0026ndash; Bonus 85,464 \u0026ndash; Insurance Benefits 26,754 \u0026ndash; CTC 12,62,218 \u0026ndash; Round 1 05/10/23\nThere were 2 sections and of 31 Questions and 90 min were given.\nTechnical MCQ (29) Coding (2) Coding Questions Number of Sale Days: A shop operates for N days, an array of size N is given where each day the value can either be 1, 0, -1.\nIf v = 1, then the shopkeeper restocks his inventory and discard his old one (if any). He can\u0026rsquo;t sell anything on that day.\nIf v = 0, then the shopkeeper can sell the items on that day (if he has any items).\nIf v = -1, then the shopkeeper will return back all the item in the shop back to the inventory and can\u0026rsquo;t sell until he restocks.\nFind the maximum number of days the shop has items on sale for one lot of items. (lot refers to the items he gets upon a restock)\nEx:\n4 1 1 0 0 Output: 2 The shop can be on sale for a max of 2 days on 1 lot. 5 1 0 -1 0 0 Output: 1 The shop has nothing in inventory after 3rd day. 5 1 0 0 1 0 Output: 2 int solve(vector\u0026lt;int\u0026gt;\u0026amp; shop) { int n = shop.size(); bool canSell = false; int res = 0; int cur = 0; for (int x: shop) { if (canSell) { if (x == 0) { ++cur; } else { res = max(res, cur); cur = 0; if (x == -1) { canSell = false; } } } else { if (x == 1) { canSell = true; } } } return res; } Free Intervals: A ground is occupied during certain intervals, return an array of intervals when the grouns is free to use. [0, 1e9] is the range of hours.\nGiven\nN: Number of intervals when ground is in use. L: An array of size N which represents the start time of the intervals. R: An array of size N which represents the end time of the intervals. No two intervals overlap, and R[i] \u0026lt; L[i + 1] for 0 \u0026lt; i \u0026lt; UL.\nIf no intervals exist, return [[-1, -1]]\nvector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; solve(vector\u0026lt;int\u0026gt; R, vector\u0026lt;int\u0026gt; L, int N) { vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; res; int end = 1e9; for (int i = 0; i \u0026lt; N; ++i) { if (i == 0) { if (L[i] == 0) { res.push_back({0, L[i]}); } } else if (i == N - 1) { if (R[i] != end) { res.push_back({R[i], end}); } } else { if (R[i - 1] \u0026lt; L[i]) { res.push_back({R[i - 1], L[i]}); } } } if (res.size() \u0026gt; 0) { return res; } return vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; {{-1, -1}}; } Round 1 05/10/23\nAn SHL assessment of 2 sections.\nAptitude (19) Verbal (25) ","permalink":"https://manasch.github.io/placements/code/amadeus/","summary":"Amadeus Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 80% XII 80% UG 7.5 GPA Compensation FTE Internship Base 10,00,000 \u0026ndash; Allowance (One Time) 1,50,000 \u0026ndash; Bonus 85,464 \u0026ndash; Insurance Benefits 26,754 \u0026ndash; CTC 12,62,218 \u0026ndash; Round 1 05/10/23\nThere were 2 sections and of 31 Questions and 90 min were given.\nTechnical MCQ (29) Coding (2) Coding Questions Number of Sale Days: A shop operates for N days, an array of size N is given where each day the value can either be 1, 0, -1.","title":""},{"content":"Amazon HackOn 2023 Details Job Status Hackathon. Winners offered internships/FTE and prize money.\nCriteria 6.5 CGPA Engineering students 2-4 members per team Prizes Winner - INR 1,00,000 1st runner-up - INR 75,000 2nd runner-up - INR 50,000 Mentorship for the Top 8 teams SWAG for the Top 8 teams The Titan - Top 50 coders - Exciting Prizes The Wonder Woman - Top 5 Female Coders - Exciting Prizes The Trailblazer - Top 5 Fastest Coders - Exciting Prizes The Zen Master - Top 5 Cleanest Coders - Exciting Prizes Round 1 28/09/2023\nEvery member of team had to solve 20 MCQs in 20 minutes. The questions were based on DSA and coding fundamentals.\nRound 2 (Coding) 29/09/2023\nEvery member of team had to solve 2 coding questions in 90 minutes. Problems were random and of various difficulty levels. As a team of 3, we had to solve 6 questions in total mentioned below.\nGiven n strings, determine the pair with the max value product. n is upto 10^6 and each string has max length of 20. The strings can contain alphanumeric characters. If a string contains any numeric character, it\u0026rsquo;s value is the integer concatenation of all numeric characters. Otherwise, it is the length of the string. Convert all strings to their values and find the two biggest values. Multiply them to get the answer.\nExample:\n3 abc a01 a42 Answer: Values are [3, 1, 42]. Max product is 42 * 3 = 126 n = int(input()) s = input().split() a = [] for i in s: if i.isnumeric(): a.append(int(i)) else: value = 0 has_numeric = False for j in i: if j.isnumeric(): value = value * 10 + int(j) has_numeric = True if not has_numeric: value = len(i) a.append(value) a.sort() print(a[-1] * a[-2]) Find the longest subsequence in an array such that each element is 3 times more than the previous element. n is upto 100 and a[i] is upto 2000. #include \u0026lt;cmath\u0026gt; #include \u0026lt;cstdio\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026lt;algorithm\u0026gt; void solve() { int n; std::cin \u0026gt;\u0026gt; n; std::vector\u0026lt;int\u0026gt; a(n); for (int i = 0; i \u0026lt; n; ++i) std::cin \u0026gt;\u0026gt; a[i]; std::vector\u0026lt;int\u0026gt; dp(n + 1); for (int i = 1; i \u0026lt;= n; ++i) { int max = 0; for (int j = 1; j \u0026lt; i; ++j) { if (a[j - 1] * 3 == a[i - 1]) max = std::max(max, dp[j]); } dp[i] = 1 + max; } std::cout \u0026lt;\u0026lt; *std::max_element(dp.begin(), dp.end()) \u0026lt;\u0026lt; std::endl; } int main() { std::ios::sync_with_stdio(false); std::cin.tie(nullptr); solve(); return 0; } Given a number, repeatedly find the sum of digits and replace the number. Keep doing this until the number has only a single digit. Print the product of the original number and the single digit. number = int(input()) temp = number while temp \u0026gt;= 10: sum = 0 while temp \u0026gt; 0: sum += temp % 10 temp //= 10 temp = sum print(number * temp) There are n number of rooms in a house. You are given a string s of length 2n-2 with upper and lower case characters. Lower case characters represent keys and Upper case characters represent rooms. All odd indices (1-based) are keys and even indices are rooms. To unlock a room, you need to have its corresponding key. Count the number of rooms for which you\u0026rsquo;ll have to additionally purchase keys if you start from room 1 and visit all rooms in the order given in the string. Example:\n4 aAbBcC Answer: 0. You can visit all rooms without purchasing any keys. 5 aAcBbCaB Answer: 1. You need to purchase key `b` for room `B` at index 4 (1-based). #include \u0026lt;bits/stdc++.h\u0026gt; void solve() { int n; std::string s; std::cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; s; std::multiset\u0026lt;char\u0026gt; keys; int ans = 0; for (int i = 0; i \u0026lt; n - 1; ++i) { char key = s[2 * i]; char door = s[2 * i + 1]; keys.insert(key); auto f = keys.find(std::tolower(door)); if (f == keys.end()) ++ans; else keys.erase(f); } std::cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; } int main() { std::ios::sync_with_stdio(false); std::cin.tie(nullptr); solve(); return 0; } You are given a string s and integer k. You need to encode the string using the following algorithm: Traverse s from left to right If the character is a vowel, you need to increment k by 2. Otherwise, increment k by 1. The value corresponding to the current character is its ASCII value times k Example:\nabecd 1 Answer: [291, 392, 606, 693, 800] 0: 97 * 3 = 291 1: 98 * 4 = 392 2: 101 * 5 = 606 3: 99 * 6 = 693 4: 100 * 7 = 800 Solution is to simulate the above behaviour.\nGiven n numbers, count the unique numbers subject to the following constraints: A number is unique if it is the maximum number in the collection and has only one occurrence. If maximum number has more than one occurrence, it is not unique and all its occurrences are removed from the collection. If maximum number has only one occurrence, it is unique. The number max is removed from the occurence and floor(max / 2) is added to the collection if it is greater than 0. Example:\n5 1 2 3 4 5 Answer: 3 0: [1, 2, 3, 4, 5], unique = 0 + 1 = 1 (5 is unique) 1: [1, 2, 3, 3, 4], unique = 1 + 1 = 2 (4 is unique) 2: [1, 2, 2, 3, 3], unique = 2 + 0 = 2 (3 is not unique and all occurrences are removed) 3: [1, 2, 2], unique = 2 + 0 = 2 (2 is not unique and all occurrences are removed) 4: [1], unique = 2 + 1 = 3 (1 is unique) 5: [], answer = 3 #include \u0026lt;bits/stdc++.h\u0026gt; int main() { std::ios::sync_with_stdio(false); std::cin.tie(nullptr); int n; std::cin \u0026gt;\u0026gt; n; std::vector\u0026lt;int\u0026gt; v(n); for (int i = 0; i \u0026lt; n; ++i) std::cin \u0026gt;\u0026gt; v[i]; std::map\u0026lt;int, int\u0026gt; map; for (int i: v) ++map[i]; int ans = 0; while (!map.empty()) { auto [k, v] = *map.rbegin(); map.erase(k); if (k / 2 \u0026gt; 0) ++map[k / 2]; if (v == 1) ans += 1; } std::cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; return 0; } Round 3 (Ideation) 03/10/2023 - 10/10/2023\nYet to happen.\nRound 4 (Prototype) 12-10-2023 - 24-10-2023\nYet to happen.\nRound 5 (Finale) 03-11-2023 - 05-11-2023\nYet to happen.\n","permalink":"https://manasch.github.io/placements/code/amazon_hackon/","summary":"Amazon HackOn 2023 Details Job Status Hackathon. Winners offered internships/FTE and prize money.\nCriteria 6.5 CGPA Engineering students 2-4 members per team Prizes Winner - INR 1,00,000 1st runner-up - INR 75,000 2nd runner-up - INR 50,000 Mentorship for the Top 8 teams SWAG for the Top 8 teams The Titan - Top 50 coders - Exciting Prizes The Wonder Woman - Top 5 Female Coders - Exciting Prizes The Trailblazer - Top 5 Fastest Coders - Exciting Prizes The Zen Master - Top 5 Cleanest Coders - Exciting Prizes Round 1 28/09/2023","title":""},{"content":"Applied Materials Details Job Status Full Time (Employment only)\nCriteria Study Cutoff X 70% XII 70% UG 7 GPA Compensation FTE Internship Base 875,914 \u0026ndash; Stocks 4000 USD (4 yrs) \u0026ndash; PF 57,810 \u0026ndash; Gratuity 23,172 \u0026ndash; Target Incentive 87,591 \u0026ndash; CTC 10,44,488 \u0026ndash; Round 1 29/08/23\nThere were no coding questions, just aptitude and analytical, math and technical questions\n","permalink":"https://manasch.github.io/placements/code/applied_materials/","summary":"Applied Materials Details Job Status Full Time (Employment only)\nCriteria Study Cutoff X 70% XII 70% UG 7 GPA Compensation FTE Internship Base 875,914 \u0026ndash; Stocks 4000 USD (4 yrs) \u0026ndash; PF 57,810 \u0026ndash; Gratuity 23,172 \u0026ndash; Target Incentive 87,591 \u0026ndash; CTC 10,44,488 \u0026ndash; Round 1 29/08/23\nThere were no coding questions, just aptitude and analytical, math and technical questions","title":""},{"content":"Arista Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 7.5 GPA Compensation FTE Internship Base 1500000 65000 Stocks 12000 USD over 4 years 50000 (one time relocation) Bonus 200000 \u0026ndash; CTC 18.5 L + Stocks \u0026ndash; Round 1 17/08/23\nCoding Questions Distances Between Nodes: Given a list of elements, create a BST out of the list of elements, and every time a new element is added to the BST, find the distance (the number of edges between every pair of nodes in the BST) of every possible pair and print the sum. This but after creating a BST. GFG Circular Linked List: Given a list of elements, create a circular linked list in a sorted order, don\u0026rsquo;t assume the first element to be the smallest, after creating the list. Insert 5 to the linked list and print out the values in ascending order. Remember take input this way while (cin \u0026gt;\u0026gt; t) Decompositions of powers of 2: Given a list of elements, decompose them into powers of 2 after which if some particular power of 2 appears odd number of times among all the decompositions combined, print that value. Take XOR of all values, this way only the bits in binary would be set that appear odd number of times, then print that power. ","permalink":"https://manasch.github.io/placements/code/arista/","summary":"Arista Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 7.5 GPA Compensation FTE Internship Base 1500000 65000 Stocks 12000 USD over 4 years 50000 (one time relocation) Bonus 200000 \u0026ndash; CTC 18.5 L + Stocks \u0026ndash; Round 1 17/08/23\nCoding Questions Distances Between Nodes: Given a list of elements, create a BST out of the list of elements, and every time a new element is added to the BST, find the distance (the number of edges between every pair of nodes in the BST) of every possible pair and print the sum.","title":""},{"content":"ARM Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 70% XII 70% UG 7 GPA Compensation FTE Internship Base 15L 45000 Stocks $23052 \u0026ndash; Bonus 10% \u0026ndash; CTC \u0026ndash; \u0026ndash; Round 1 01/10/23\nThere were no coding questions. 2 Mandatory sections and an optional section, 75 min\nAptitude Technical Digital or Analogue ","permalink":"https://manasch.github.io/placements/code/arm/","summary":"ARM Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 70% XII 70% UG 7 GPA Compensation FTE Internship Base 15L 45000 Stocks $23052 \u0026ndash; Bonus 10% \u0026ndash; CTC \u0026ndash; \u0026ndash; Round 1 01/10/23\nThere were no coding questions. 2 Mandatory sections and an optional section, 75 min\nAptitude Technical Digital or Analogue ","title":""},{"content":"Aurva Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 8 GPA 8 GPA or OpenSource contributor Compensation FTE Internship Base 1400000 30000 Stocks 200000 \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 1600000 \u0026ndash; Lunch / Dinner provided at office. Round 1 14/10/23\nThe test was not on any platform, rather a document was provided and we were asked to code it locally and upload it to google drive and share them the link.\nCoding Questions Parking Slots: A parking lot has a number of parking slots. It also maintains a register which contains the entry and exit times of the cars using the parking slots.\nGiven the register entries as input, determine the minimum number of slots that the parking lot should have to accommodate the cars.\nThe entry array and exit array are index based. The 1st index indicates when the 1st car entered and exited and so on.\nNote: if there is an entry and exit at the same time we are counting that as a slot being free.\nExample:\nInput: Entry = [1, 3, 4, 5] Exit = [2, 5, 6, 7] Output: 2 int solve(vector\u0026lt;int\u0026gt;\u0026amp; entry, vector\u0026lt;int\u0026gt;\u0026amp; ex, int n) { if (n == 0) { return 0; } if (n == 1) { return 1; } sort(entry.begin(), entry.end()); sort(ex.begin(), ex.end()); int overlaps = 0, count = 0; int start = 0, end = 0; // Basically have to check the number of overlapping intervals while (start \u0026lt; n \u0026amp;\u0026amp; end \u0026lt; n) { // if the start of the running interval is less than the end of the next one, we need a slot. if (entry[start] \u0026lt; ex[end]) { ++start; ++count; } // otherwise that slot has been used and then we don\u0026#39;t need it anymore. else { ++end; --count; } // at any point in time we keep track of the maximum number of slots required. overlaps = max(overlaps, count); } return overlaps; } Leaf Nodes: A binary tree is given where leaf nodes ar interconnected through left and right pointers, with right leaf nodes linked through right pointers and left leaf nodes connected through left pointers.\nFind out all the leaf nodes that the tree is having.\nExample:\nInput: Pointer to root node TreeNode { int val; TreeNode *left; TreeNode *right; } Output: [3, 4, 5, 5] (Order doesn\u0026#39;t matter) Balanced Subarray: Aurva has n servers lined up in a row. The ith server has the capacity of capacity[i].\nAny application can be deployed on a balanced contiguous subsegment of 3 or more servers. A contiguous segment, [l, r] of servers is said to be balanced if capacity[l] = capacity[r] = sum(capacity[l + 1]...capacity[r - 1]) i.e. the capacity of the servers at the endpoints of the segment should be equal to the sum of the capacity of all the interior servers.\nGiven the capacity of each server in a row, find the number of balanced sub-segments in it.\nExample:\n[(9, 3, 3, 3, 9)] == 2 (9, 3, 3, 3, 9) and (3, 3, 3) sub-array satisfies the criteria [(6, 1, 2, 3, 6)] == 1 (6, 1, 2, 3, 6) satisfies the criteria [(9, 3, 1, 2, 3, 9, 10)] == 2 (9, 3, 1, 2, 3, 9) and (3, 1, 2, 3) satisfies the criteria int solve(vector\u0026lt;int\u0026gt;\u0026amp; arr) { if (arr.size() \u0026lt; 3) { return 0; } int n = arr.size(); vector\u0026lt;int\u0026gt; prefix(n, 0); prefix[0] = arr[0]; // Maintain a prefix sum for finding the sum of a contigious subarray quickly for (int i = 1; i \u0026lt; n; ++i) { prefix[i] = prefix[i - 1] + arr[i]; } unordered_map\u0026lt;int, set\u0026lt;int\u0026gt;\u0026gt; unmap; int res = 0; for (int i = 0; i \u0026lt; n; ++i) { // If the value has been seen before, check if the prefix sum difference in the middle is the same as the end values if (unmap.find(arr[i]) != unmap.end()) { for (int idx: unmap[arr[i]]) { if (i - idx + 1 \u0026gt;= 3 \u0026amp;\u0026amp; prefix[i - 1] - prefix[idx] == arr[i]) { ++res; } } } unmap[arr[i]].insert(i); } return res; } ","permalink":"https://manasch.github.io/placements/code/aurva/","summary":"Aurva Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 8 GPA 8 GPA or OpenSource contributor Compensation FTE Internship Base 1400000 30000 Stocks 200000 \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 1600000 \u0026ndash; Lunch / Dinner provided at office. Round 1 14/10/23\nThe test was not on any platform, rather a document was provided and we were asked to code it locally and upload it to google drive and share them the link.","title":""},{"content":"Baxter Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 7 GPA Compensation FTE Internship Base 991310 \u0026ndash; PF 47583 \u0026ndash; Gratuity 19073 \u0026ndash; Others 23081 \u0026ndash; Target Variable Pay 118957 \u0026ndash; CTC \u0026ndash; \u0026ndash; Round 1 25/08/23\nThere were multiple sections, aptitude, analytical, technical, electrical but no coding.\n","permalink":"https://manasch.github.io/placements/code/baxter/","summary":"Baxter Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 7 GPA Compensation FTE Internship Base 991310 \u0026ndash; PF 47583 \u0026ndash; Gratuity 19073 \u0026ndash; Others 23081 \u0026ndash; Target Variable Pay 118957 \u0026ndash; CTC \u0026ndash; \u0026ndash; Round 1 25/08/23\nThere were multiple sections, aptitude, analytical, technical, electrical but no coding.","title":""},{"content":"British Telecom Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Joining Bonus 150000 \u0026ndash; Retention Bonus 250000 \u0026ndash; CTC 1300000 \u0026ndash; Total 1700000 \u0026ndash; Round 1 - Coding Round 19/09/23\nA total of 13 questions. Time - 120 min.\nMCQ (10) - Technical - (KMP and N-Queens TC was asked) Coding (3) - 1 SQL Coding Questions Maximum Friendship Power: There are N Cities and M Bi-Directional Roads. An array A of size N consists of the number of people in each group (there are N groups). A city is connected to another city if it can be reached by the roads. A set of connected cities form a kingdom.\nGiven these values, generate a permutation array B (of size N) which assigns the groups to the cities respectively such that the maximum friendship power can be formed. Friendship power is determined by the number of unique connections among X people, i.e. (X * (X - 1)) / 2.\nSince this number can be large, give the answer % mod_value (A number was given which I forgot). (Assume 1-indexing).\nExample:\nN = 4\nM = [[1,3], [2,4]]\nA = [6,2,1,3]\nOutput: 39 (2 kingdoms 36 + 3)\nint solve(int n, int m, vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt;\u0026amp; roads, vector\u0026lt;int\u0026gt;\u0026amp; a) { unordered_map\u0026lt;int, vector\u0026lt;int\u0026gt;\u0026gt; adj; for (auto road: roads) { adj[road[0]].push_back(road[1]); adj[road[1]].push_back(road[0]); } priority_queue\u0026lt;int\u0026gt; groups(a.begin(), a.end()); priority_queue\u0026lt;int\u0026gt; kingdoms; unordered_set\u0026lt;int\u0026gt; visited; auto dfs = [\u0026amp;] (auto self, int src, int\u0026amp; count) { if (visited.find(src) != visited.end()) { return; } visited.insert(src); ++count; for (int neigh: adj[src]) { if (visited.find(neigh) == visited.end()) { self(self, neigh, count); } } }; int count; for (int i = 1; i \u0026lt;= n; ++i) { count = 0; dfs(dfs, i, count); if (count \u0026gt; 0) { kingdoms.push(count); } } int mod = 1e9 + 7; // Just taking some random modulus as I don\u0026#39;t remember what they gave. int res = 0; int currentSum = 0; int currentKingdomCount; while (!kingdoms.empty()) { currentKingdomCount = kingdoms.top(); kingdoms.pop(); currentSum = 0; while (currentKingdomCount--) { currentSum += groups.top(); groups.pop(); } res += ((currentSum) * (currentSum - 1) / 2) % mod; } return res; } This passed half the test cases, IDK why :( Number in a Range: Three numbers L, R, K are given, where [L, R] determine a range of numbers to consider. Find the K\u0026rsquo;th number in the range such that the pattern 101 occurs anywhere in the binary representation of the number. If the K\u0026rsquo;th number doesn\u0026rsquo;t exist, return -1. bool containsPattern(int n) { int p = 5; // 5 in binary is 101, the pattern to match. int t = 7; // 7 in binary is 111, when anded with this, will give the group of 3 bits to check. while (p \u0026lt;= n) { if ((n \u0026amp; t) == p) { return true; } p \u0026lt;\u0026lt;= 1; t \u0026lt;\u0026lt;= 1; } return false; } int solve(int l, int r, int k) { int res = -1; for (int i = l; i \u0026lt;= r; ++i) { if (containsPattern(i)) { --k; cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#34; \u0026#34;; } if (k == 0) { res = i; break; } } return res; } This TLE\u0026rsquo;d, some tricky math for optimization maybe Digit DP + Binary Search. Coding Ninjas SQL International and Domestic Flights: Given a table airports consisting of columns (id, code, country) where code is the shortform for a state. Return the total number of international flights and domestic flights.\nExample:\nid code country 1 CAL USA 2 TEX USA 3 FLO USA 4 ALA USA 5 BER GER 6 LUX BEL Output:\nInternational Domestic 9 6 select ( select round(count(*) / 2, 0) from airports a1 join airports a2 where a1.code != a2.code and a1.country != a2.country ) as \u0026#34;International\u0026#34;, ( select round(count(*) / 2, 0) from airports a1 join airports a2 where a1.code != a2.code and a1.country = a2.country ) as \u0026#34;Domestic\u0026#34;; Round 2 - Interview About yourself. Resume based, projects discussions. 3 DSA and 1 Pattern printing Given n, print the pattern as 1, 2, 3 \u0026hellip; n \u0026hellip; 3, 2, 1 Detect a cycle in a linked list. Longest occurances of 1\u0026rsquo;s in a binary array, same but in a circular binary array. Given an array of integers, replace each element with the next greatest element from the array to its right. (Daily Temperatures on LC) ","permalink":"https://manasch.github.io/placements/code/british_telecom/","summary":"British Telecom Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Joining Bonus 150000 \u0026ndash; Retention Bonus 250000 \u0026ndash; CTC 1300000 \u0026ndash; Total 1700000 \u0026ndash; Round 1 - Coding Round 19/09/23\nA total of 13 questions. Time - 120 min.\nMCQ (10) - Technical - (KMP and N-Queens TC was asked) Coding (3) - 1 SQL Coding Questions Maximum Friendship Power: There are N Cities and M Bi-Directional Roads.","title":""},{"content":"Broadridge Details Job Status Full Time (Employment + Internship Mandatory) - Member Technical\nCriteria Study Cutoff X % XII % UG 7 GPA Compensation FTE Internship Base \u0026ndash; 30000 Stocks \u0026ndash; \u0026ndash; Medical 5LPA on top of CTC \u0026ndash; CTC 10LPA \u0026ndash; Round 1 15/09/23\nThere were 6 sections, no coding. Test was for 65 min, not timed section-wise\nCognitive Ability (27) Data Structures (4) Database Concepts (3) Networking (6) OOPS Concepts (4) Operating System (3) ","permalink":"https://manasch.github.io/placements/code/broadridge/","summary":"Broadridge Details Job Status Full Time (Employment + Internship Mandatory) - Member Technical\nCriteria Study Cutoff X % XII % UG 7 GPA Compensation FTE Internship Base \u0026ndash; 30000 Stocks \u0026ndash; \u0026ndash; Medical 5LPA on top of CTC \u0026ndash; CTC 10LPA \u0026ndash; Round 1 15/09/23\nThere were 6 sections, no coding. Test was for 65 min, not timed section-wise\nCognitive Ability (27) Data Structures (4) Database Concepts (3) Networking (6) OOPS Concepts (4) Operating System (3) ","title":""},{"content":"Cisco Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base 1450000 88000 PF 87000 \u0026ndash; Gratuity 34800 \u0026ndash; Perf Bonus 72500 \u0026ndash; RSU 34% y1 8.25% 2 yrs \u0026ndash; Sign on Bonus 650000 (2 yrs) \u0026ndash; Relocation 120833 \u0026ndash; CTC 2473633 \u0026ndash; Other compensation was mentioned, such as broadband reimbursement, medical and such.\nRound 1 - Coding Round 29/08/23\nA total of 41 questions were asked with 40 of them being MCQ\u0026rsquo;s based on C, Cpp, Java, Aptitude. 1 Coding question\nCoding Questions Snakes and Ladders Leetcode GFG\nRound 2 - Interview Technical based questions. Resume based projects discussion. Real world usage of data structures and algos. Networking. CAP Theorem, examples and real world usage. Streaming, Database Python Round 3 - Managerial Managerial questions. Interests, hobbies, about me. How would you manage a team meeting? How would you connect with teams across the globe and ensure work efficiency? SQL questions, Questions on projects. Round 4 - HR About Cisco and Job role. About Yourself. Flexible timings and job location satisfactory? ","permalink":"https://manasch.github.io/placements/code/cisco/","summary":"Cisco Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base 1450000 88000 PF 87000 \u0026ndash; Gratuity 34800 \u0026ndash; Perf Bonus 72500 \u0026ndash; RSU 34% y1 8.25% 2 yrs \u0026ndash; Sign on Bonus 650000 (2 yrs) \u0026ndash; Relocation 120833 \u0026ndash; CTC 2473633 \u0026ndash; Other compensation was mentioned, such as broadband reimbursement, medical and such.\nRound 1 - Coding Round 29/08/23","title":""},{"content":"Cloudera Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 8% XII 8% UG 8 GPA Cutoff was increased after initial registration. Compensation FTE Internship Base 1700000 \u0026ndash; Variable Compensation 85000 \u0026ndash; Retirals 114308 \u0026ndash; STAR\u0026rsquo;s 500 \u0026ndash; CTC 1899308 \u0026ndash; Round 1 21/08/23\n3 Questions:\nSQL (1) Coding (2) Coding Questions Find the 2nd largest value: Write an SQL statement to print the second largest value from a column, if it doesn\u0026rsquo;t exist, then print null. SELECT DISTINCT PRICE FROM PRODUCTS ORDER BY PRICE DESC LIMIT 1, 1; Should have worked but didn\u0026rsquo;t. Lines passing through special point: Given a 2D plane and a special point (p) and n other points (x1, x2\u0026hellip;xn). Find the number of pairs of points amongst the n points that pass through the special point. Finding the slope of each point wrt to the special point, if for some slope m, there are q number of points with the same slope, then the number of pairs of lines that pass through the special point would be (q * (q - 1))/2\nNearest Prime: Given a list of integers, if the number is not a prime, then find the closest prime and print that number, else do nothing. ","permalink":"https://manasch.github.io/placements/code/cloudera/","summary":"Cloudera Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 8% XII 8% UG 8 GPA Cutoff was increased after initial registration. Compensation FTE Internship Base 1700000 \u0026ndash; Variable Compensation 85000 \u0026ndash; Retirals 114308 \u0026ndash; STAR\u0026rsquo;s 500 \u0026ndash; CTC 1899308 \u0026ndash; Round 1 21/08/23\n3 Questions:\nSQL (1) Coding (2) Coding Questions Find the 2nd largest value: Write an SQL statement to print the second largest value from a column, if it doesn\u0026rsquo;t exist, then print null.","title":""},{"content":"Commvault Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 75% XII 75% UG 80% Compensation FTE Internship Base 16,00,000 \u0026ndash; Stocks 19000 USD \u0026ndash; Joining Bonus 1,50,000 \u0026ndash; Relocation Bonus 75000 \u0026ndash; CTC 32.99LPA 50000 Round 1 - Coding Round 01/08/23\nTwo job roles were offered, QA and SDE, QA only had python as an option and SDE had an option between JAVA and CPP, I chose CPP.\nThere were 2 sections timed separately.\nCPP Fundamentals and Generics MCQ (13) Coding (3) Coding Questions Reverse alternate K nodes in a Singly Linked List A function to reverse a linked list given head and apply this every other m nodes.\nGiven a BST, and two values p and q, find the largest value in the path from p to q. Both p and q exist. Find the lowest common ancestor and traverse right.\nint solve(Node *head, int p, int q) { Node *p1 = head; while (true) { if (p1-\u0026gt;data \u0026gt; p \u0026amp;\u0026amp; p1-\u0026gt;data \u0026gt; q) { p1 = p1-\u0026gt;left; } else if (p1-\u0026gt;data \u0026lt; p \u0026amp;\u0026amp; p1-\u0026gt;data \u0026lt; q) { p1 = p1-\u0026gt;right; } else { break; } } int maxVal = max(p, q); int result = 0; while (p1 != maxVal) { if (p1-\u0026gt;data \u0026gt; maxVal) { p1 = p1-\u0026gt;left; } else if (p1-\u0026gt;data \u0026lt; maxVal) { p1 = p1-\u0026gt;right; } result = max(result, p1-\u0026gt;data); } return result; } A mountain of q meters high exists, with q-1 supports spaced out every 1 meter. Can jump at most r supports at once. Starting from the bottom find the total number of ways to reach the peak. Have a DP array and keep updating its values from right to left. Similar to Climbing Stairs\nint solve(int q, int r) { vector\u0026lt;int\u0026gt; dp(q); for (int i = q - 1; i \u0026gt;= 0; --i) { int count = 0; for (int j = 1; j \u0026lt; r; ++j) { if (i + j == q) { ++count; } else if (i + j \u0026lt; q) { count += dp[i + j]; } else { break; } } dp[i] = count; } return dp[0]; } Round 2 - Design Round Build a tool to represent two snaps of a filesystem in memory.\nMore detailed document was provided and had to meet certain milestones every few hours.\nThe solution should be highly scalable, and have decent performance.\nSome pre-defined functions with class implementations were provided and we had to complete the function definitions.\n","permalink":"https://manasch.github.io/placements/code/commvault/","summary":"Commvault Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 75% XII 75% UG 80% Compensation FTE Internship Base 16,00,000 \u0026ndash; Stocks 19000 USD \u0026ndash; Joining Bonus 1,50,000 \u0026ndash; Relocation Bonus 75000 \u0026ndash; CTC 32.99LPA 50000 Round 1 - Coding Round 01/08/23\nTwo job roles were offered, QA and SDE, QA only had python as an option and SDE had an option between JAVA and CPP, I chose CPP.","title":""},{"content":"Confluent Details Job Status Internship + PPO\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base 1500000 100000 Stocks $10000 vested over 3 years \u0026ndash; Annual Bonus 75000 \u0026ndash; CTC 1850000 \u0026ndash; There were 3 Roles\nData Infrastructure Intern Business Intelligence Intern Project Management Intern Round 1 09/10/23\nData Infrastructure Intern There were 3 coding questions to be solved in 75 min.\nCoding Questions Min Cost: Will update when I remember.\nMax Price: Given a tree which has nodes from 1-n which refer to the version of some product. Each node has a value V associated to it. For each node, find the max product of 2 values in the subtree (The subtree includes the node being considered). If the node is a leaf node, then the max product would be 0.\nReturn a list where list[i] = max product of the subtree for the ith node. (Assume 1-indexing)\nV -\u0026gt; [-10^5, 10^5] N -\u0026gt; [1, ?] Folder Count: An existing folder structure is provided which shows the parent-child relationship between different folders.\n\u0026lsquo;folder-1\u0026rsquo; is always the root.\nThe existing folder structure is given as follows:\nfolder-1 a folder-1 b a c b d folder-1 /\\ a b / \\ c d 3 kinds of queries can be performed\nmkdir a b : Create a new folder b under a. rmdir a : Remove the folder a and all of its subfolders. count a : Return the count of all the subfolders including itself. Given n queries amongst which c of them are the count query, return a list of size c holding the count for the respective folder count function call.\nBusiness Intelligence Intern There were 3 SQL questions and some MCQs, 75 min.\nProject Management Intern A group discussion was held with 8 people on each side and were asked to debate on a topic at hand.\n","permalink":"https://manasch.github.io/placements/code/confluent/","summary":"Confluent Details Job Status Internship + PPO\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base 1500000 100000 Stocks $10000 vested over 3 years \u0026ndash; Annual Bonus 75000 \u0026ndash; CTC 1850000 \u0026ndash; There were 3 Roles\nData Infrastructure Intern Business Intelligence Intern Project Management Intern Round 1 09/10/23\nData Infrastructure Intern There were 3 coding questions to be solved in 75 min.\nCoding Questions Min Cost: Will update when I remember.","title":""},{"content":"CynLr Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base 1200000 - 1800000 30000 Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC \u0026ndash; \u0026ndash; Round 1 27/08/23\nThere were 5 sections and we had 3 hours.\nPractical Physics (4) Phsyics MCQ\u0026rsquo;s Aptitude Coding (1) Behavioural Coding Questions Number of triangles: Given a 2d matrix of 1\u0026rsquo;s and 0\u0026rsquo;s, find the total number of equilateral and isosceles triangles that can be formed taking any of the 1\u0026rsquo;s to be the vertices. There were no test cases to be passed, just a text box where code could by typed ","permalink":"https://manasch.github.io/placements/code/cynlr/","summary":"CynLr Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base 1200000 - 1800000 30000 Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC \u0026ndash; \u0026ndash; Round 1 27/08/23\nThere were 5 sections and we had 3 hours.\nPractical Physics (4) Phsyics MCQ\u0026rsquo;s Aptitude Coding (1) Behavioural Coding Questions Number of triangles: Given a 2d matrix of 1\u0026rsquo;s and 0\u0026rsquo;s, find the total number of equilateral and isosceles triangles that can be formed taking any of the 1\u0026rsquo;s to be the vertices.","title":""},{"content":"Deloitte Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 6.5 GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 760000 \u0026ndash; Round 1 03/09/23\nThere were 4 sections:\nEnglish Comprehension Aptitude Technical Coding (2) Coding Questions Matching Last Character: Given a list of words and a character to match, print the sorted position (1-index) of the word with the other words if the last letter of the word matches with the character to match. def solve(inputStr, searchCh): words = inputStr.split() words.sort() for i in range(len(words)): if words[i][-1] == searchCh: print(words[i], i + 1) Largest Digit in a Number: Given a number, return the largest digit in the number. ","permalink":"https://manasch.github.io/placements/code/deloitte/","summary":"Deloitte Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 6.5 GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 760000 \u0026ndash; Round 1 03/09/23\nThere were 4 sections:\nEnglish Comprehension Aptitude Technical Coding (2) Coding Questions Matching Last Character: Given a list of words and a character to match, print the sorted position (1-index) of the word with the other words if the last letter of the word matches with the character to match.","title":""},{"content":"Deutsche Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 7 GPA / 70% Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 19.63 LPA \u0026ndash; Round 1 11/08/23\nThere was only one coding section with 3 questions\nCoding Questions Minimum length of positive sum subarray: Given an array with both negative and positive integers, for each index, find the minimum length subarray such that the sum of all elements in that subarray is positive. Bruteforce approach passed all the test cases, but otherwise could be solved using sliding window.\nInfinite Multiples: Given an array of positive integers, and a value k, find the k\u0026rsquo;th largest number among the multiples of each and every element in the given array. Create a min-heap and maintain its size to be k and add k multiples for each element in the array, this way the minimum element in a min-heap of size k would be the k\u0026rsquo;th largest element.\nMaze Runner: Given a 2-D matrix, each cell takes one of three values.\n\u0026lsquo;.\u0026rsquo; - Indicates an open path\n\u0026lsquo;#\u0026rsquo; - Indicates a door (Obstacle)\n\u0026lsquo;*\u0026rsquo; indicates a wall (Obstacle).\nThe person will start at the top-left cell and has to find the shortest path to the bottom-right cell. They can wear two types of glasses, one which allows them to pass through the door and the other to pass through the wall, only one glass can be worn at once, for both the glasses, find the shortest path to reach the destination. If it can\u0026rsquo;t be reached return -1.\nPerform BFS for both cases, could probably be optimized more with DP, not sure.\n","permalink":"https://manasch.github.io/placements/code/deutsche/","summary":"Deutsche Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 7 GPA / 70% Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 19.63 LPA \u0026ndash; Round 1 11/08/23\nThere was only one coding section with 3 questions\nCoding Questions Minimum length of positive sum subarray: Given an array with both negative and positive integers, for each index, find the minimum length subarray such that the sum of all elements in that subarray is positive.","title":""},{"content":"Dish Networks Technology Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 7.5 GPA Compensation FTE Internship Base 1200000 \u0026ndash; Variable 120000 \u0026ndash; Benefits 91360 \u0026ndash; CTC 1411360 25000 Round 1 30/08/23\nNo coding, just multiple sections of technical, aptitude, analytical.\n","permalink":"https://manasch.github.io/placements/code/dish/","summary":"Dish Networks Technology Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 7.5 GPA Compensation FTE Internship Base 1200000 \u0026ndash; Variable 120000 \u0026ndash; Benefits 91360 \u0026ndash; CTC 1411360 25000 Round 1 30/08/23\nNo coding, just multiple sections of technical, aptitude, analytical.","title":""},{"content":"Egnyte Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 7.5 GPA Compensation FTE Internship Base \u0026ndash; 50000 Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 1400000 - 1500000 \u0026ndash; Round 1 19/08/23\nThere was only one coding section with 2 questions, everyone had a combination of 2 from a pool of questions.\nCoding Questions Sum of total waiting time: ***REMOVED***\n    \n\nExamples:\n\n\n\n\nCreate a queue, push all tasks to it, have a counter that is always increasing. Pop the queue and if after decrementing the value becomes 0, add the current counter val to the total variable with mod, else push it to the back of the queue. Repeat till the queue is empty.\n#include \u0026lt;queue\u0026gt; #include \u0026lt;vector\u0026gt; using namespace std; int solution(vector\u0026lt;int\u0026gt; arr) { queue\u0026lt;int\u0026gt; q; int n = arr.size(); for (int i = 0; i \u0026lt; n; ++i) { q.push(arr[i]); } int hours = 1; int modulo = 1e9; int total = 0; while (!q.empty()) { int task = q.front(); --task; q.pop(); if (task == 0) { total = (total + hours) % modulo; } else { q.push(task); } ++hours; } return total; } Max tiles coverage: ***REMOVED***\n\nint solution(vector\u0026lt;int\u0026gt; \u0026amp;A); \nExamples:\n\n\n\n\nCreate another array of sums of it\u0026rsquo;s adjacent neighbour, perform a 2D House-Robber approach to find the best possible sum of values covered by tiles.\nvoid dfs(vector\u0026lt;int\u0026gt;\u0026amp; tileSum, size_t idx, int\u0026amp; largestSum, int sum, int tiles) { if (tiles == 0) { largestSum = max(largestSum, sum); return; } if (idx \u0026gt;= tileSum.size()) { return; } sum += tileSum[idx]; // cout \u0026lt;\u0026lt; sum \u0026lt;\u0026lt; endl; for (size_t i = idx + 2; i \u0026lt;= tileSum.size() + 2; ++i) { dfs(tileSum, i, largestSum, sum, tiles - 1); } } int solution(vector\u0026lt;int\u0026gt; \u0026amp;A) { // Implement your solution here int n = A.size(); int tiles; if (n \u0026gt;= 6) { tiles = 3; } else if (n \u0026gt;= 4 \u0026amp;\u0026amp; n \u0026lt; 6) { tiles = 2; } else { tiles = 1; } vector\u0026lt;int\u0026gt; tileSum; for (int i = 0; i \u0026lt; n - 1; ++i) { tileSum.push_back(A[i] + A[i + 1]); } int largestSum = 0; for (size_t i = 0; i \u0026lt; tileSum.size(); ++i) { dfs(tileSum, i, largestSum, 0, tiles); } return largestSum; } This would most likely TLE for large test cases. Didn\u0026rsquo;t know how to use 2d DP. int solution(vector\u0026lt;int\u0026gt; arr) { vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; dp(arr.size() + 2, vector\u0026lt;int\u0026gt; (4, 0)); int max_ele = 0; for(int i = 2; i \u0026lt; dp.size(); i++) { for(int j = 1; j \u0026lt; dp[0].size(); j++) { if(i \u0026gt;= 2 * j) { dp[i][j] = max(dp[i - 2][j - 1] + arr[i - 2], dp[i - 1][j]); if(dp[i][j] \u0026gt; max_ele) { max_ele = dp[i][j]; } } else { dp[i][j] = dp[i - 1][j]; } } } return max_ele; } Bottom-up DP ","permalink":"https://manasch.github.io/placements/code/egnyte/","summary":"Egnyte Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 7.5 GPA Compensation FTE Internship Base \u0026ndash; 50000 Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 1400000 - 1500000 \u0026ndash; Round 1 19/08/23\nThere was only one coding section with 2 questions, everyone had a combination of 2 from a pool of questions.\nCoding Questions Sum of total waiting time: There are N clients who have ordered N handmade items.","title":""},{"content":"Eli Lilly Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base 1100000 30000 Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC \u0026ndash; \u0026ndash; Round 1 14/09/23\nThere were totally 4 sections and it was 2 hours. The sections were not times, could allocate how much ever time required for any section.\nReasoning (24) Programming (8) - Basically all were SQL Quantitative (23) Coding (3) - Everyone got different questions. Coding Questions War Ships: Given two inputs, layers and modulus. Return the total number of ships required mod the modulus.\nEach ship is assigned a value V and the first layer has 1 ship with value 2. For each ship, the number of ships in the next layer are decided by the value V for that ship.\nThe number of ships in the next layer for that ship with value V is\n[V * V + 1] % M\nwhere M is the modulus and the values for those ships will be ranging from [0, ([V * V + 1] % M) - 1].\nExample:\nL = 2, M = 3\nLayer 1: 1 ship with V = 2 (Given)\nLayer 2: 2 ships with V = [0, 1] because [2 * 2 + 1] % 3 = 2.\nOutput would be 0 as total number of ships is 3 and 3 % 3 is 0.\nStealing Window: A thief is trying to steal from a bank. The bank has N guards and each guard will guard the place for a certain interval. The bank will be open for T minutes. The thief needs X minutes to complete the heist, and it can be split, not all the X mins need to be done at once. Given the intervals at which each guard will be in front of the bank. Determine whether it is possible for the thief to perform the heist.\nInput: N, T, X, Intervals = [start, end, start, end, start, end\u0026hellip;]\nFind the available time between the intervals and return \u0026ldquo;Possible Z\u0026rdquo; or \u0026ldquo;Impossible Z\u0026rdquo; where Z is the free time between the intervals that the theif has to perform the heist.\nAron\u0026rsquo;s Gift: Aron shows preference to two characters C1 and C2. He gives a string consisting of just these two characters. Given the string length and the two characters he likes. Return the number of strings (substrings) that are possible such that it starts with C1 and ends with C2.\nInputs:\nN - Length of string C1 - Character 1 C2 - Character 2 S - String Ex:\nN - 3\nC1 - x, C2 - y\nS = xxy\nOutput: 2 - [\u0026ldquo;xxy\u0026rdquo;, \u0026ldquo;xy\u0026rdquo;]\nN - 2\nC1 - a, C2 - b\nS = ab\nOutput: 1 - [\u0026ldquo;ab\u0026rdquo;]\nint solve(int n, char c1, char c2, string s) { int countC1 = 0; int res = 0; for (int i = 0; i \u0026lt; n; ++i) { if (s[i] == c1) { ++countC1; } else { res += countC1; } } return res; } ","permalink":"https://manasch.github.io/placements/code/eli_lilly/","summary":"Eli Lilly Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base 1100000 30000 Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC \u0026ndash; \u0026ndash; Round 1 14/09/23\nThere were totally 4 sections and it was 2 hours. The sections were not times, could allocate how much ever time required for any section.\nReasoning (24) Programming (8) - Basically all were SQL Quantitative (23) Coding (3) - Everyone got different questions.","title":""},{"content":"Hiver Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 80% XII 80% UG 8 GPA Compensation FTE Internship Base 1000000 25000 Stocks \u0026ndash; \u0026ndash; Bonus 100000 \u0026ndash; CTC 1100000 \u0026ndash; Round 1 07/10/23\nThere were only 7 questions, 5 MCQ and 2 Coding, in 1h15m\nCoding Questions Next Smallest Palindrome: Given a number as an array, find the next smallest palindrome. vector\u0026lt;int\u0026gt; solve(vector\u0026lt;int\u0026gt; num) { bool isPalin = false; int n = num.size(); auto helper = [\u0026amp;] () { int l = 0; int r = n - 1; int t, oldr, p; while (l \u0026lt; r) { oldr = num[r]; num[r] = num[l]; if (oldr \u0026gt; num[l]) { t = r - 1; while (t \u0026gt; 0) { p = num[t]; ++p; if (p \u0026lt; 10) { num[t] = p; break; } else { num[t] = 0; } --t; } --l; ++r; } ++l; --r; } if (l \u0026gt;= r) { isPalin = true; } }; while (!isPalin) { helper(); } return num; } Covid Beds: There is a line of beds represented by 1\u0026rsquo;s and 0\u0026rsquo;s in a string, 1 means that the bed is occupied and 0 means that the bed is vacant. A partition is defined as such that it has exactly 2 occupied beds (this can also mean that the parition can have vacant beds too).\nA partition is created by placing a temporary walls between any two beds.\nPrint the number of ways the walls can be placed such that partitions satisfying the conditions can be made. If no such partitions can be made, print -1.\nEx:\n6 110011 Output: 3 - [11|0011, 110|011, 1100|11] 6 101101 Output: 1 - [101|101] 11 11001100011 Output: 12 ","permalink":"https://manasch.github.io/placements/code/hiver/","summary":"Hiver Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 80% XII 80% UG 8 GPA Compensation FTE Internship Base 1000000 25000 Stocks \u0026ndash; \u0026ndash; Bonus 100000 \u0026ndash; CTC 1100000 \u0026ndash; Round 1 07/10/23\nThere were only 7 questions, 5 MCQ and 2 Coding, in 1h15m\nCoding Questions Next Smallest Palindrome: Given a number as an array, find the next smallest palindrome. vector\u0026lt;int\u0026gt; solve(vector\u0026lt;int\u0026gt; num) { bool isPalin = false; int n = num.","title":""},{"content":"HPE Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 80% XII 80% UG 7 GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 1750000 40000 Round 1 06/09/23\nThere were 4 sections:\nAptitude (15) - 20 min Technical (33) - 40 min Coding(2) - 30 min (language 1) Coding(2) - 30 min (language 2) The options for languages was - cpp, c, python, java\nCoding Questions CPP Coding Nuggets Palindrome Number: Given a number, a palindrome can be construced by add the reverse of the number to itself: 12 + 21 = 33. But this is not the case for all numbers for ex: 57. Find the first palindrome that occurs when performing these operations for the given number. Edge case would be when the given number itself is a palindrome.\nint reverse(int num) { int n = num; int res = 0; while (n \u0026gt; 0) { res = res * 10 + n % 10; n = n / 10; } if (res == num) { return 0; } return res; } int palindrome(int N) { int num = N; int t = reverse(num); if (t == 0) { num += num; t = reverse(num); } while (t != 0) { num += t; t = reverse(num); } return num; } int main() { int N; cin \u0026gt;\u0026gt; n; cout \u0026lt;\u0026lt; palindrome(N) \u0026lt;\u0026lt; endl; return 0; } Number of cars: A car requires 4 wheels (w), 2 chairs (c) and 1 body (b). Given w, c, b, find out the number of cars that can be manufactured. int main() { int w, c, b; cin \u0026gt;\u0026gt; w \u0026gt;\u0026gt; c \u0026gt;\u0026gt; b; int count = 0; while (w \u0026gt;= 4 \u0026amp;\u0026amp; c \u0026gt;= 2 \u0026amp;\u0026amp; b \u0026gt;= 1) { ++count; w -= 4; --b; c -= 2; } cout \u0026lt;\u0026lt; count \u0026lt;\u0026lt; endl; return 0; } Python Coding Nuggets Absolute Volume Difference: Given length, breadth and height of two cubes, find the absolue volume difference between the two. int difference(l1, b1, h1, l2, b2, h2): return abs(l1 * b1 * h1 - l2 * b2 * h2) New Array: Given an array, modify it such that the value at the kth position is the sum of the values of it\u0026rsquo;s next two neighbors. int newArray(arr, n): lastArr = arr.copy() for i in range(n): arr[i] = lastArr[(i + 1) % n] + lastArr[(i + 2) % n] ","permalink":"https://manasch.github.io/placements/code/hpe/","summary":"HPE Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 80% XII 80% UG 7 GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 1750000 40000 Round 1 06/09/23\nThere were 4 sections:\nAptitude (15) - 20 min Technical (33) - 40 min Coding(2) - 30 min (language 1) Coding(2) - 30 min (language 2) The options for languages was - cpp, c, python, java","title":""},{"content":"Hyperface Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 8 GPA Compensation FTE Internship Base 14 LPA 30000 Stocks 3 L \u0026ndash; Bonus 3 L \u0026ndash; CTC ~20 L \u0026ndash; Round 1 - Coding Round 18/08/23\nThere was only 1 question and we were given 2 hours.\nCoding Questions Chef\u0026rsquo;s Dishes: A chef wants to cook dishes, he gets one new ingredient each day, and this ingredient can be one of 5 types. (Protein, Carb, Fibre, Fat, Seasoning), and each type has an expiry date. The ingredient would be as follows: Fat1, CarbsRice, ProtienChicken, Fibre1\u0026hellip;\nFat - 1 (If received on Day 1, can be used on Day 1 or Day 2, but expires after Day 2) Carbs - 3 . .\nA dish is prepared when it meets the following conditions:\nIt uses exactly M ingredients It uses exactly N categories (Fat, Fibre etc). The expected output is as follows:\nIf the chef can cook on a day with the ingredients he has, print out the ingredients used in the order of their arrival separated by \u0026ldquo;:\u0026rdquo;. ex: Fat1:Fibre2:Carbs1. If the chef cannot cook then print \u0026ldquo;#\u0026rdquo;. If the chef can cook on a day he will mandatorily make the dish. Round 2 - Design Round Design an in-memory sophisticated cache that handles the following\nEviction Strategy: LRU, LFU. Write Policy: Write-Through, Write-Behind. TTL: Delete data from cache after ttl has expired. Cache Misses: Determine the number of cache misses at any point in time. Configurable cache size A two page document was provided with function declarations and details.\nCould pick any language of our choice, usage of internet was allowed but no LLM\u0026rsquo;s\n","permalink":"https://manasch.github.io/placements/code/hyperface/","summary":"Hyperface Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 8 GPA Compensation FTE Internship Base 14 LPA 30000 Stocks 3 L \u0026ndash; Bonus 3 L \u0026ndash; CTC ~20 L \u0026ndash; Round 1 - Coding Round 18/08/23\nThere was only 1 question and we were given 2 hours.\nCoding Questions Chef\u0026rsquo;s Dishes: A chef wants to cook dishes, he gets one new ingredient each day, and this ingredient can be one of 5 types.","title":""},{"content":"IBM Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus 150000 \u0026ndash; CTC 1700000LPA \u0026ndash; Round 1 10/09/23\nThere was only one section with 2 coding questions. Everyone got 2 questions from a pool of questions.\nCoding Questions New Array: Given a list of integers and a list of intervals, for each interval, inverst the sign of the numbers with the interval, At the end return how the list would like like. (Follow 1-Based indexing).\nExample:\nL = [1, -4, 5, 3], intervals = [[2, 4], [1, 3]]\nFirst Interval : [1, 4, -5, 3]\nSecond Interval: [-1, -4, 5, -3]\nThe array after applying reversal of sign for all intervals should be returned.\nCircles Relationship: Given a list of strings such that each string contains the centres and radii of 2 circles, return a list of same length determining whether the circles: Intersect at two points, Touch, Concentric, Disjoint-Outside, Disjoint-Inside\nString would be: \u0026ldquo;x1 y1 r1 x2 y2 r1\u0026rdquo; and all the circle would either be centred on the x-axis or y-axis.\ndef euclidian(x1, y1, x2, y2): return ((x1 - x2) ** 2 + (y1 - y2) ** 2) ** 0.5 def solve(circles): for circle in circles: x1, y1, r1, x2, y2, r2 = [int(x) for x in circle.strip().split()] dist = euclidian(x1, y1, x2, y2) if x1 == x2 and y1 == y2: print(\u0026#34;Concentric\u0026#34;) if r1 + r2 == dist or max(r1, r2) - min(r1, r2) == dist: print(\u0026#34;Touching\u0026#34;) if max(r1, r2) - min(r1, r2) \u0026lt; d \u0026lt; r1 + r2: print(\u0026#34;Intersecting\u0026#34;) if r1 + r2 \u0026lt; dist: print(\u0026#34;Disjoint-Outside\u0026#34;) else: print(\u0026#34;Disjoint-Inside\u0026#34;) Compare JSON Given two json strings, find the difference between the common keys.\nNth Factor Given a number, return the Nth factor. Ex: K = 10, factors are: 1, 2, 5, 10, if n = 3, then 5 should be returned\nFind factors till sqrt(K) as the rest would repeat or be the inverse of the factors existing.\n","permalink":"https://manasch.github.io/placements/code/ibm/","summary":"IBM Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus 150000 \u0026ndash; CTC 1700000LPA \u0026ndash; Round 1 10/09/23\nThere was only one section with 2 coding questions. Everyone got 2 questions from a pool of questions.\nCoding Questions New Array: Given a list of integers and a list of intervals, for each interval, inverst the sign of the numbers with the interval, At the end return how the list would like like.","title":""},{"content":"IDfy Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 6 GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 10L \u0026ndash; Round 1 16/10/23\nCoding Questions 3 Coding questions and 1 SQL\nCoding Preprocess Dates: Given a list of dates in the format 5-Mar-2023 convert it to 2023-03-05. unordered_map\u0026lt;string, string\u0026gt; months = { {\u0026#34;Jan\u0026#34;, \u0026#34;01\u0026#34;}, {\u0026#34;Feb\u0026#34;, \u0026#34;02\u0026#34;}, {\u0026#34;Mar\u0026#34;, \u0026#34;03\u0026#34;}, {\u0026#34;Apr\u0026#34;, \u0026#34;04\u0026#34;}, {\u0026#34;May\u0026#34;, \u0026#34;05\u0026#34;}, {\u0026#34;Jun\u0026#34;, \u0026#34;06\u0026#34;}, {\u0026#34;Jul\u0026#34;, \u0026#34;07\u0026#34;}, {\u0026#34;Aug\u0026#34;, \u0026#34;08\u0026#34;}, {\u0026#34;Sep\u0026#34;, \u0026#34;09\u0026#34;}, {\u0026#34;Oct\u0026#34;, \u0026#34;10\u0026#34;}, {\u0026#34;Nov\u0026#34;, \u0026#34;11\u0026#34;}, {\u0026#34;Dec\u0026#34;, \u0026#34;12\u0026#34;}, }; vector\u0026lt;string\u0026gt; preprocessDate(vector\u0026lt;string\u0026gt; dates) { vector\u0026lt;string\u0026gt; res; for (auto date: dates) { int i = 0; string day = \u0026#34;\u0026#34;; string month = \u0026#34;\u0026#34;; string year = \u0026#34;\u0026#34;; string t = \u0026#34;\u0026#34;; while (date[i] != \u0026#39; \u0026#39;) { if (date[i] - \u0026#39;0\u0026#39; \u0026lt; 10 \u0026amp;\u0026amp; date[i] - \u0026#39;0\u0026#39; \u0026gt;= 0) { t += date[i]; } ++i; } ++i; if (t.size() == 1) { day += \u0026#39;0\u0026#39;; } day += t; t = \u0026#34;\u0026#34;; while (date[i] != \u0026#39; \u0026#39;) { t += date[i]; ++i; } ++i; month = months[t]; t = \u0026#34;\u0026#34;; while (i \u0026lt; date.size()) { t += date[i]; ++i; } year = t; res.push_back(year + \u0026#34;-\u0026#34; + month + \u0026#34;-\u0026#34; + day); } return res; } Nuts \u0026amp; Bolts: There are two numbers, a secret number and a guess number, the number of digits in the guess number that are in the correct position of the secret number refer to as nuts.\nWhereas, the number of digits in the guess number that are in the secret number but at the wrong position is refered to as bots.\nPrint it as xAyB where x is nuts and y is bolts.\nstring solve(string secret, string guess) { int nuts = 0; int bolts = 0; int n = secret.size(); unordered_set\u0026lt;int\u0026gt; incorrect; unordered_map\u0026lt;char, int\u0026gt; remaining; for (int i = 0; i \u0026lt; n; ++i) { if (secret[i] == guess[i]) { ++nuts; } else { ++remaining[secret[i]]; incorrect.insert(i); } } for (int idx: incorrect) { if (remaining[guess[idx]] != 0) { ++bolts; --remaining[guess[idx]]; } } return to_string(nuts) + \u0026#34;A\u0026#34; + to_string(bolts) + \u0026#34;B\u0026#34;; } Error Logs: Given a list of error logs in the format of [date, time, type, status], return only those logs which are of type ERROR or CRITICAL and return them in the sorted order of date and time. If two logs appear at the same time, give priority to the one that appears first. string helper(string date, string time) { string year = \u0026#34;\u0026#34;; string month = \u0026#34;\u0026#34;; string day = \u0026#34;\u0026#34;; string t = \u0026#34;\u0026#34;; for (int i = 0; i \u0026lt; date.size(); ++i) { if (date[i] == \u0026#39;-\u0026#39;) { if (day == \u0026#34;\u0026#34;) { day = t; } else { month = t; } t.clear(); continue; } t += date[i]; } year = t; return year + month + day + time; } vector\u0026lt;vector\u0026lt;string\u0026gt;\u0026gt; extractErrorLogs(vector\u0026lt;vector\u0026lt;string\u0026gt;\u0026gt; logs) { vector\u0026lt;pair\u0026lt;string, int\u0026gt;\u0026gt; l; string log_string = \u0026#34;\u0026#34;; for (int i = 0; i \u0026lt; logs.size(); ++i) { auto log = logs[i]; if (log[2] == \u0026#34;ERROR\u0026#34; || log[2] == \u0026#34;CRITICAL\u0026#34;) { log_string += helper(log[0], log[1]); l.push_back({log_string, i}); } log_string.clear(); } sort(l.begin(), l.end()); vector\u0026lt;vector\u0026lt;string\u0026gt;\u0026gt; res; for (auto p: l) { res.push_back(logs[p.second]); } return res; } SQL CPU Usage: Two tables, servers (int id, varchar(255) cidr) and usage (int id, varchar(255) cpu_usage, varchar(255) network_usage, varchar(255) system_usage) are given.\nDisplay the server ip\u0026rsquo;s that have a cpu_usage of over a threshold, display the average of all the usages for all the listings for that server ip.\nThreshold: 80%\nServers\nid cidr 1 192.168.1.0/24 2 171.xxx.y.z/16 Usage\nid cpu_usage network_usage system_usage 1 1% 50% 7% 2 81% 5% x% 3 75% x% y% 2 23% x% y% 1 46% x% y% 2 95% x% y% 3 72% x% y% 2 23% x% y% id 2 has one or more listings with more than 80% cpu_usage so display the avg of all listings of id 2 Output\ncidr cpu_usage network_usage system_usage 171.xxx.y.z/16 66.34% x% y% ","permalink":"https://manasch.github.io/placements/code/idfy/","summary":"IDfy Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 6 GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 10L \u0026ndash; Round 1 16/10/23\nCoding Questions 3 Coding questions and 1 SQL\nCoding Preprocess Dates: Given a list of dates in the format 5-Mar-2023 convert it to 2023-03-05. unordered_map\u0026lt;string, string\u0026gt; months = { {\u0026#34;Jan\u0026#34;, \u0026#34;01\u0026#34;}, {\u0026#34;Feb\u0026#34;, \u0026#34;02\u0026#34;}, {\u0026#34;Mar\u0026#34;, \u0026#34;03\u0026#34;}, {\u0026#34;Apr\u0026#34;, \u0026#34;04\u0026#34;}, {\u0026#34;May\u0026#34;, \u0026#34;05\u0026#34;}, {\u0026#34;Jun\u0026#34;, \u0026#34;06\u0026#34;}, {\u0026#34;Jul\u0026#34;, \u0026#34;07\u0026#34;}, {\u0026#34;Aug\u0026#34;, \u0026#34;08\u0026#34;}, {\u0026#34;Sep\u0026#34;, \u0026#34;09\u0026#34;}, {\u0026#34;Oct\u0026#34;, \u0026#34;10\u0026#34;}, {\u0026#34;Nov\u0026#34;, \u0026#34;11\u0026#34;}, {\u0026#34;Dec\u0026#34;, \u0026#34;12\u0026#34;}, }; vector\u0026lt;string\u0026gt; preprocessDate(vector\u0026lt;string\u0026gt; dates) { vector\u0026lt;string\u0026gt; res; for (auto date: dates) { int i = 0; string day = \u0026#34;\u0026#34;; string month = \u0026#34;\u0026#34;; string year = \u0026#34;\u0026#34;; string t = \u0026#34;\u0026#34;; while (date[i] !","title":""},{"content":"Infibeam Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 80% XII 80% UG 8GPA There was another cut off, probably 8.5 GPA Compensation FTE Internship Base 20,000 Stocks \u0026ndash; \u0026ndash; Bonus 2L (One Time) \u0026ndash; CTC 10 + 2L \u0026ndash; Round 1 07/10/23\nThere was only 1 section, 22 questions of which 2 were coding, a total of 1h45m was given to complete the test.\nCoding Questions Height of a tree: Given a binary tree, find the height of the tree by skipping the nodes that have odd-valued data. The height of an empty tree is 0 The height of a tree with just the root is also 0. If all the nodes are odd-valued, then the height is 0. int solve(Node *root) { int res = 0; auto dfs = [\u0026amp;] (auto self, Node *node, int height) { if (node == nullptr) { res = max(res, height); return; } if (node-\u0026gt;data % 2 == 0) { ++height; } self(self, node-\u0026gt;left, height); self(self, node-\u0026gt;right, height); }; dfs(dfs, root, 0); return max(res - 1, 0); } Word Search void solve(vector\u0026lt;vector\u0026lt;char\u0026gt;\u0026gt;\u0026amp; board, string word) { int m = board.size(); int n = board[0].size(); bool containsWord = false; visited\u0026lt;pair\u0026lt;int, int\u0026gt;\u0026gt; visited; auto bfs = [\u0026amp;] (auto self, int i, int j, int idx) { if (min(i, j) \u0026lt; 0 || i \u0026gt;= m || j \u0026gt;= n || containsWord) { return; } if (visited.find({i, j}) != visited.end()) { return; } if (idx == word.size()) { containsWord = true; return; } visited.insert({i, j}); if (board[i][j] == word[idx]) { self(self, i, j + 1); self(self, i, j - 1); self(self, i + 1, j); self(self, i - 1, j); } visited.erase({i, j}); }; for (int i = 0; i \u0026lt; m; ++i) { for (int j = 0; j \u0026lt; n; ++j) { bfs(bfs, i, j, 0); if (containsWord) { break; } } if (containsWord) { break; } } cout \u0026lt;\u0026lt; boolalpha \u0026lt;\u0026lt; res \u0026lt;\u0026lt; endl; } Round 2 11/10/23\nThis was a technical round, questions were asked based on resume.\nWhat is a stack? What is a linked list, hashtable? How is a hashtable implemented? What is an ordereddict? Time complexities. What is a heap, insertion time complexity? Difference between a heap and a binary tree? Project discussions. Code for insertion and finding an element in a linked list. Round 3 11/10/23\nThis was a coding/algo round\nWrite the code to flatten a binary tree into a linked list. Write the code to find the largest sum subarray. Leetcode ","permalink":"https://manasch.github.io/placements/code/infibeam/","summary":"Infibeam Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 80% XII 80% UG 8GPA There was another cut off, probably 8.5 GPA Compensation FTE Internship Base 20,000 Stocks \u0026ndash; \u0026ndash; Bonus 2L (One Time) \u0026ndash; CTC 10 + 2L \u0026ndash; Round 1 07/10/23\nThere was only 1 section, 22 questions of which 2 were coding, a total of 1h45m was given to complete the test.","title":""},{"content":"Intel Details There were two roles available:\nData Science: ML and Data Handling 2 open positions\nDescription: Work on automation of Data ETL for retail data\nDesired skills: Python, DL frameworks (PyTorch/TF), Data Engineering\nDeep Learning: Continuous Learning 1 open position\nDescription: CL algorithm basket and methodology addressing combination of non-IID data and \u0026gt;100K SKU’s\nDesired skills: Python, DL frameworks (PyTorch/TF), DL Training experience for Image\nJob Status 6-month Internship only (1 Jan 24 - 30 Jun 24)\nCriteria No criteria\nCompensation Not shared\nRound 1 19/09/23\nResume based shortlisting\nRound 2 (Final) 06/10/23\nThe interviewer focussed on asking questions based on previous experience and projects. As the role was AI/ML oriented, they were not asking coding questions.\n","permalink":"https://manasch.github.io/placements/code/intel/","summary":"Intel Details There were two roles available:\nData Science: ML and Data Handling 2 open positions\nDescription: Work on automation of Data ETL for retail data\nDesired skills: Python, DL frameworks (PyTorch/TF), Data Engineering\nDeep Learning: Continuous Learning 1 open position\nDescription: CL algorithm basket and methodology addressing combination of non-IID data and \u0026gt;100K SKU’s\nDesired skills: Python, DL frameworks (PyTorch/TF), DL Training experience for Image\nJob Status 6-month Internship only (1 Jan 24 - 30 Jun 24)","title":""},{"content":"Intuit Details Job status FTE + Internship (mandatory)\nCriteria Study Cutoff X % XII % UG 8 GPA Compensation FTE Internship Base 20.5 LPA 50000 Bonus 2.05 L \u0026ndash; Joining Bonus 3,50,000 \u0026ndash; RSU vested over 3.5 years 23000 USD ~ (18,87,270 INR) \u0026ndash; CTC 44,92,270 \u0026ndash; Stipend: 1L pm\nRound 1 27/07/23\nQuestions Lost in Woods\nString parsing basically.\nInput\n12 S_**___*_**D \u0026lsquo;S\u0026rsquo; - start \u0026lsquo;D\u0026rsquo; - destination * - obstacle _ - path\nIf path exists can walk (W) else if an obstacle exists, can jump(J) over all the obstacles.\nOutput\nWJWWJJ Efficient Gardner Furious Dhoni\nN x M matrix and each cell contains a value ranging from -1000 to 1000, both N and M can range from 1 to 1000.\nGiven a ball which can start from any location, the ball can move to the right or down to its adjacent neighbor. If the ball goes from x1 y1 to x2 y2 (right or down), then the reward obtained is matrix[x2][y2] - matrix[x1][y1].\nFind the largest reward that can be obtained in the path where the ball moves only right or down.\nDon\u0026rsquo;t remember.. ","permalink":"https://manasch.github.io/placements/code/intuit/","summary":"Intuit Details Job status FTE + Internship (mandatory)\nCriteria Study Cutoff X % XII % UG 8 GPA Compensation FTE Internship Base 20.5 LPA 50000 Bonus 2.05 L \u0026ndash; Joining Bonus 3,50,000 \u0026ndash; RSU vested over 3.5 years 23000 USD ~ (18,87,270 INR) \u0026ndash; CTC 44,92,270 \u0026ndash; Stipend: 1L pm\nRound 1 27/07/23\nQuestions Lost in Woods\nString parsing basically.\nInput\n12 S_**___*_**D \u0026lsquo;S\u0026rsquo; - start \u0026lsquo;D\u0026rsquo; - destination * - obstacle _ - path","title":""},{"content":"MakeMyTrip Details Job Status 6 Months Internship + PPO\nCriteria Study Cutoff X % XII % UG 7 GPA Compensation FTE Internship Base 13L \u0026ndash; Stocks 10L Vesting equally in 4 years \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 23L 50000 Round 1 16/09/23\nThere were 17 Questions to be solved in 1.5 hours\nMCQ (15) Coding (2) Coding Questions Telephone Lines: There are M houses and N localities, your job as a city planner is to design a plan such that atleast one house exists in a locality.\nIn a locality, all the houses have a telephone line connected to each other (n*(n-1)/2). Generate two plans to find out the maximum and minimum number of telephone lines that will be required across all the localities.\nMax would be generated when all localities except one has 1 house, and the rest in the last locality. The min would be when the houses are equally distributed across all localities.\nNew Neighbours: There are M houses built in a row and there are N people wanting to move into the houses. (N \u0026lt;= M). Everyone wants to stay as far away as possible from each other, what would be the maximised minimum distance between the houses.\nAn array of size M is provided which has the distances from the front gate. Assign the N people to the houses such that they are as far away as possible from each other.\nPerform a binary search to determine the distance between the houses and keep updating the minimum distance.\n","permalink":"https://manasch.github.io/placements/code/makemytrip/","summary":"MakeMyTrip Details Job Status 6 Months Internship + PPO\nCriteria Study Cutoff X % XII % UG 7 GPA Compensation FTE Internship Base 13L \u0026ndash; Stocks 10L Vesting equally in 4 years \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 23L 50000 Round 1 16/09/23\nThere were 17 Questions to be solved in 1.5 hours\nMCQ (15) Coding (2) Coding Questions Telephone Lines: There are M houses and N localities, your job as a city planner is to design a plan such that atleast one house exists in a locality.","title":""},{"content":"Microchip Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks 4L (over 4 years) \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 10L + 4L 30K Round 1 17/10/23\n60 MCQ\u0026rsquo;s based on aptitude, technical and electrical knowledge in 70 min.\n","permalink":"https://manasch.github.io/placements/code/microchip/","summary":"Microchip Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks 4L (over 4 years) \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 10L + 4L 30K Round 1 17/10/23\n60 MCQ\u0026rsquo;s based on aptitude, technical and electrical knowledge in 70 min.","title":""},{"content":"Morgan Stanley Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 8 GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 29.48 LPA 87000 Round 1 17/09/23\nThere were 3 sections and a total of 100 min.\nAutomata Fix (7) - 20min - (A debugging section, debug code such that it passes all test cases.) Quantitative and Logical Aptitude (10) - 20min Coding (3) - 60min Coding Questions Longest Common Prefix: Given an array of names, find the longest common prefix of all the names. string solve(vector\u0026lt;string\u0026gt;\u0026amp; names, int n) { if (n == 0) { return \u0026#34;\u0026#34;; } if (n == 1) { return names[0]; } sort(names.begin(), names.end()); string min_string = names.front().size() \u0026lt; names.back().size() ? names.front() : names.back(); int min_length = min_string.size(); int i = 0; string res = \u0026#34;\u0026#34;; while (i \u0026lt; min_length \u0026amp;\u0026amp; names.front()[i] == names.back()[i]) { res += min_string[i]; ++i; } return res; } int main() { int n; cin \u0026gt;\u0026gt; n; vector\u0026lt;string\u0026gt; names(n); for (int i = 0; i \u0026lt; n; ++i) { cin \u0026gt;\u0026gt; names[i]; transform(names[i].begin(), names[i].end(), names[i].begin(), [](unsigned char c) {return tolower(c);}); } string res = solve(names, n); cout \u0026lt;\u0026lt; res \u0026lt;\u0026lt; endl; return 0; } GFG Max Substring Length: Given a number as string, find the largest length of a substring of size 2k such that the sum of left k digits is equal to the sum of the right k digits. num = input() n = len(num) maxLen = 0 for i in range(n - 1): l = i r = i + 1 leftSum = 0 rightSum = 0 while (l \u0026gt;=0 and r \u0026lt; n): leftSum += int(num[l]) rightSum += int(num[r]) if leftSum == rightSum: maxLen = max(maxLen, r - l + 1) l -= 1 r += 1 print(maxLen) int solve(string num, int n) { int l, r, leftSum, rightSum, maxLen = 0; for (int i = 0; i \u0026lt; n - 1; ++i) { l = i; r = i + 1; leftSum = 0; rightSum = 0; while (l \u0026gt;= 0 \u0026amp;\u0026amp; r \u0026lt; n) { leftSum += num[l] - \u0026#39;0\u0026#39;; rightSum += num[r] - \u0026#39;0\u0026#39;; if (leftSum == rightSum) { maxLen = max(maxLen, r - l + 1); } --l; ++r; } } return maxLen; } int main() { string num; cin \u0026gt;\u0026gt; num; int res = solve(num, num.size()); cout \u0026lt;\u0026lt; res \u0026lt;\u0026lt; endl; return 0; } Number of Different Plants: Given a 2D matrix of 0\u0026rsquo;s and 1\u0026rsquo;s, find the different number plants that exist. In the cell, if a plant exists, it is marked as 1 otherwise 0.\nThe plants that are connected 4-sided are of the same type, whereas the plants that are connected diagonally are considered different plants. Hence given these conditions, find the total number of different plants.\nint solve(vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt;\u0026amp; matrix, int m, int n) { int count = 0; set\u0026lt;pair\u0026lt;int, int\u0026gt;\u0026gt; visited; auto bfs = [\u0026amp;] (auto self, int i, int j) { if (min(i, j) \u0026lt; 0 || i \u0026gt;= m || j \u0026gt;= n) { return; } if (matrix[i][j] == 0 || visited.find({i, j}) != visited.end()) { return; } visited.insert({i, j}); self(self, i, j + 1); self(self, i + 1, j); self(self, i, j - 1); self(self, i - 1, j); }; for (int i = 0; i \u0026lt; m; ++i) { for (int j = 0; j \u0026lt; n; ++j) { if (matrix[i][j] == 1 \u0026amp;\u0026amp; visited.find({i, j}) == visited.end()) { bfs(bfs, i, j); ++count; } } } return count; } int main() { int n, m; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; graph(n, vector\u0026lt;int\u0026gt;(m, 0)); for (int i = 0; i \u0026lt; n; ++i) { for (int j = 0; j \u0026lt; m; ++j) { cin \u0026gt;\u0026gt; graph[i][j]; } } int ans = solve(graph, n, m); cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; endl; return 0; } This is exactly LC#200 but worded differently. ","permalink":"https://manasch.github.io/placements/code/morgan_stanley/","summary":"Morgan Stanley Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 8 GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 29.48 LPA 87000 Round 1 17/09/23\nThere were 3 sections and a total of 100 min.\nAutomata Fix (7) - 20min - (A debugging section, debug code such that it passes all test cases.) Quantitative and Logical Aptitude (10) - 20min Coding (3) - 60min Coding Questions Longest Common Prefix: Given an array of names, find the longest common prefix of all the names.","title":""},{"content":"Natwest Group Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 6 GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 13LPA \u0026ndash; Round 1 - Coding Round 29/08/23\nThere were multiple sections, technical, aptitude, english, analytical. 2 Coding Everyone had different coding questions.\nCoding Questions Characters in same position: Given a string, find out the number of characters that will be in the same position once the string is reversed. Unique Elements: Given a list of integers, return the unique elements in the order they appear. Round 2 - Interview There was only 1 round for everyone. About yourself, hobbies and tech stack used. Projects explanation from resume or other interests. Pseudocode on any one sorting algo. Why Natwest?? ","permalink":"https://manasch.github.io/placements/code/natwest/","summary":"Natwest Group Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 6 GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 13LPA \u0026ndash; Round 1 - Coding Round 29/08/23\nThere were multiple sections, technical, aptitude, english, analytical. 2 Coding Everyone had different coding questions.\nCoding Questions Characters in same position: Given a string, find out the number of characters that will be in the same position once the string is reversed.","title":""},{"content":"NVIDIA Details Job Status 6 Month Internship\nCriteria Study Cutoff X % XII % UG 8 GPA Compensation FTE Internship Base \u0026ndash; 75000 Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC \u0026ndash; \u0026ndash; Round 1 20/09/23\n3 Sections, 60 min and not timed by section.\nAnalytical (15) Technical (12) Coding (2) Coding Questions Last Stone Weight int lastStoneWeight(vector\u0026lt;int\u0026gt;\u0026amp; stones) { priority_queue\u0026lt;int, vector\u0026lt;int\u0026gt;\u0026gt; q(stones.begin(), stones.end()); int s, t; while (q.size() \u0026gt; 1) { s = q.top(); q.pop(); t = q.top(); q.pop(); if ((s - t) != 0) { q.push(s - t); } } if (q.size() \u0026gt; 0) { return q.top(); } return 0; } Regex Match: Given a binary representation of a number in string, give the regex pattern to determine if it is a power of 2. This was weird, CPP12 language selection had the parsing code already and we just had to mention the regex pattern, whereas CPP14 and CPP20 language selection, we had to take the input and perform the parsing. Nonetheless, parsing can be done with the help of a flag.\nPower of 2 will always have one 1 and 0\u0026#39;s on both sides. 0*10* ","permalink":"https://manasch.github.io/placements/code/nvidia/","summary":"NVIDIA Details Job Status 6 Month Internship\nCriteria Study Cutoff X % XII % UG 8 GPA Compensation FTE Internship Base \u0026ndash; 75000 Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC \u0026ndash; \u0026ndash; Round 1 20/09/23\n3 Sections, 60 min and not timed by section.\nAnalytical (15) Technical (12) Coding (2) Coding Questions Last Stone Weight int lastStoneWeight(vector\u0026lt;int\u0026gt;\u0026amp; stones) { priority_queue\u0026lt;int, vector\u0026lt;int\u0026gt;\u0026gt; q(stones.begin(), stones.end()); int s, t; while (q.size() \u0026gt; 1) { s = q.","title":""},{"content":"Pure Storage Details Job Status FTE + Internship (Mandatory)\nCriteria Study Cutoff X % XII % UG 7GPA Compensation FTE Internship Base 16 LPA (100000 Per month) 100000 pm 10% \u0026ndash; Stocks 35000 USD \u0026ndash; Bonus 300000 \u0026ndash; CTC 271625 \u0026ndash; Round 1 02/08/23\nThe questions were different for everyone.\nTwo sections\nMCQ (11) Coding (2) Coding Questions Minimum Operations to Make the Array Alternating This but the input array was just of 0\u0026rsquo;s and 1\u0026rsquo;s\nPython Requests Library Had to use python\u0026rsquo;s request module to fetch data from an api endpoint and give a summary\nLongest Increasing Subsequence ","permalink":"https://manasch.github.io/placements/code/pure_storage/","summary":"Pure Storage Details Job Status FTE + Internship (Mandatory)\nCriteria Study Cutoff X % XII % UG 7GPA Compensation FTE Internship Base 16 LPA (100000 Per month) 100000 pm 10% \u0026ndash; Stocks 35000 USD \u0026ndash; Bonus 300000 \u0026ndash; CTC 271625 \u0026ndash; Round 1 02/08/23\nThe questions were different for everyone.\nTwo sections\nMCQ (11) Coding (2) Coding Questions Minimum Operations to Make the Array Alternating This but the input array was just of 0\u0026rsquo;s and 1\u0026rsquo;s","title":""},{"content":"PwC Acceleration Centers Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 60%/6 GPA Cyber Security as Major or Elective Compensation FTE Internship Base \u0026ndash; \u0026ndash; CTC 6LPA 35000 Round 1: Cyber Recruit Boot Camp 08/08/23\nThere were 4 sections:\nComputer Fundamental MCQs (16) Cybersecurity MCQs (16) Coding Question - Easy (1) Coding Question - Novice (1) Coding Questions had a choice of C, Java and Python. Questions were different for everyone.\nQuestions Coding Question - Easy Remove duplicates from string A function to remove all duplicate alphabets and non-alphabetic characters from a string and sort it in ascending order. The resultant string was supposed to be lower-case.\ndef solve(str): str = sorted(str.lower()) res = \u0026#34;\u0026#34; for i in str: if i.isalpha() and i not in res: res += i return res Coding Question - Novice Special Number A function to return \u0026ldquo;Special number\u0026rdquo; if any of the digits in the number were perfect squares of 1, 2 or 3, otherwise return \u0026ldquo;Not a special number\u0026rdquo;\ndef solve(n): while n != 0: if n % 10 in [1,4,9]: return \u0026#34;Special number\u0026#34; n //= 10 return \u0026#34;Not a special number\u0026#34; ","permalink":"https://manasch.github.io/placements/code/pwc/","summary":"PwC Acceleration Centers Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 60%/6 GPA Cyber Security as Major or Elective Compensation FTE Internship Base \u0026ndash; \u0026ndash; CTC 6LPA 35000 Round 1: Cyber Recruit Boot Camp 08/08/23\nThere were 4 sections:\nComputer Fundamental MCQs (16) Cybersecurity MCQs (16) Coding Question - Easy (1) Coding Question - Novice (1) Coding Questions had a choice of C, Java and Python.","title":""},{"content":"Ring Central Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 90% XII 90% UG 7.5 Compensation FTE Internship Base 20,50,000 \u0026ndash; CTC 24,15,000 + 4L sign up \u0026ndash; Round 1 06/08/23\nTwo sections\nMCQ (15) Coding (2) MCQ Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 Q10 Q11 Q12 Q13 Q14 Q15 Coding Q16 House Robber on Leetcode\nQ17 ","permalink":"https://manasch.github.io/placements/code/ring_central/","summary":"Ring Central Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 90% XII 90% UG 7.5 Compensation FTE Internship Base 20,50,000 \u0026ndash; CTC 24,15,000 + 4L sign up \u0026ndash; Round 1 06/08/23\nTwo sections\nMCQ (15) Coding (2) MCQ Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 Q10 Q11 Q12 Q13 Q14 Q15 Coding Q16 House Robber on Leetcode\nQ17 ","title":""},{"content":"Sahaj Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base 1200000 \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 1304677 \u0026ndash; Round 1 24/08/23\nOnline test based on fundamentals - CN, OS, DBMS, OOPS. A total of 20 questions.\nRound 2 - Building in-memory DB for backend server. Problem statement We need a system to be able to manage data for employees. Requests will be accepted over HTTP (API contract). No databases/libraries can be used to store/maintain data.\nFastest applications win.\nTechnical details Your repository needs to have a Dockerfile that starts your HTTP web app Your HTTP app need to expose APIs (API contract) on port 8080 No existing databases, libraries and services can be used to store the data Application needs to persist data across restarts No limitation on the programming language Do not touch the GitHub actions code. It is used to test your code automatically and score it. Any modifications will lead to immediate disqualification. Maximum time a single request can take is 10 seconds Data should be persisted in /home/ FAQ Do not run a development webserver with watch enabled in your app. Your tests will fail. If your greeting end point test is not passing, please check the output you produce. It needs to be exactly what is requested. When in doubt, please check the Github Actions logs for details Logs for the performance tests will not be shared Data to be stored { employeeId: string, name: string, city: string } API contract GET /greeting Checks whether the service is available.\nResponse Code: 200 Content: Hello world! POST /employee Creates a new Employee and returns the employeeId\nRequest \u0026amp; Response headers Content-Type: application/json\nBody { name: string, city: string } Success Response Status code: 201 Content: { \u0026quot;employeeId\u0026quot;: \u0026quot;\u0026lt;employee_id\u0026gt;\u0026quot; } (Note: Employee ID is a string) GET /employee/:id Returns the specified employee.\nURL Params id=[string] Required\nSuccess Response Status code: 200 Content: { \u0026lt;employee_object\u0026gt; } Error Response Status code: 404 Content: { message : \u0026quot;Employee with \u0026lt;employee_id\u0026gt; was not found\u0026quot; } GET /employees/all Returns list of all employees.\nSuccess Response Status code: 200 Content: [{ \u0026lt;employee_object\u0026gt; }] PUT /employee/:id Updates fields of the existing employee and returns the new object.\nURL Params id=[string] Required\nHeaders Content-Type: application/json\nBody { name: string, city: string } Success Response Code: 201 Content: { \u0026lt;employee_object\u0026gt; } Error Response Code: 404 Content: { message : \u0026quot;Employee with \u0026lt;employee_id\u0026gt; was not found\u0026quot; } DELETE /employee/:id Deletes existing employee record.\nURL Params id=[string] Required\nSuccess Response Status code: 200 Content: { \u0026lt;employee_object\u0026gt; } Error Response Status code: 404 Content: { message : \u0026quot;Employee with \u0026lt;employee_id\u0026gt; was not found\u0026quot; } Competition rules Check rules and scoring pages for details. When in doubt, ask the organizers and we will add clarifications to the page.\nSample Instructions for coding/committing git clone git repository url (Skip this step if using github codespaces) cd repository name (Skip this step if using github codespaces) Goto server.js Begin coding Code needs to be tested via github? Execute following commands in the terminal location of your repository git add . git commit -m \u0026lsquo;any message regarding your changes\u0026rsquo; git push Wait for build to complete in github actions logs. If build is green, you should see the score on the leader board, else check with actions logs. Sample Instructions for Codespaces installation On your browser after accepting the github invitation, Celect \u0026ldquo;Code\u0026rdquo; dropdown Select the \u0026ldquo;Codespaces\u0026rdquo; tab. Select \u0026ldquo;Create codespace on main\u0026rdquo; Continue from step 3 of Sample Instructions for coding/commit ","permalink":"https://manasch.github.io/placements/code/sahaj/","summary":"Sahaj Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base 1200000 \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 1304677 \u0026ndash; Round 1 24/08/23\nOnline test based on fundamentals - CN, OS, DBMS, OOPS. A total of 20 questions.\nRound 2 - Building in-memory DB for backend server. Problem statement We need a system to be able to manage data for employees.","title":""},{"content":"Samsung Research Institute Details Job Status Internship Only\nCriteria Study Cutoff X % XII % UG 7 GPA Compensation FTE Internship Base \u0026ndash; 50000 Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC \u0026ndash; \u0026ndash; Round 1 18/10/23\nThere were 3 coding questions to be solved in 80 min, everyone got 3 questions from a pool of questions.\nCoding Questions Christmas Gifts: There are N chocolates and M toys, a gift box can have either X chocolates and Y toys or X toys and Y chocolates.\nFind the maximum number of gift boxes that can be made.\nint solve(int n, int m, int x, int y) { vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; dp(n + 1, vector\u0026lt;int\u0026gt;(m + 1, -1)); auto dfs = [\u0026amp;] (auto self, int i, int j) { if (min(i, j) \u0026lt; 0) { return -1; } if (dp[i][j] != -1) { return dp[i][j]; } int left = self(self, i - x, j - y); int right = self(self, i - y, j - x); return dp[i][j] = 1 + max(right, left); }; return dfs(dfs, n, m); } Hamiltonian Circuits: Given an undirected graph, return the total number of unique hamiltonian circuits.\nNote: An hamiltonian circuit is a path in which each node in the graph is visited once except for the source node which is visited twice.\nGFG Worms: Given some number of worms and some number of interactions amongst the worms, figure out whether these interactions are valid or not.\nA worm can be a male or female. A valid interaction is when a male worm interacts with the female worm and vice versa.\nFor the given set of interactions, figure out if it is a valid set of interactions or an invalid set of interactions.\nEx:\n3 (worms) 3 (interactions) 1 2 2 3 1 3 This is invalid as 1 interacts with 2 and 3 but 2 interacts with 3, there is no possible combination of genders where this is valid. ","permalink":"https://manasch.github.io/placements/code/samsung_rnd/","summary":"Samsung Research Institute Details Job Status Internship Only\nCriteria Study Cutoff X % XII % UG 7 GPA Compensation FTE Internship Base \u0026ndash; 50000 Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC \u0026ndash; \u0026ndash; Round 1 18/10/23\nThere were 3 coding questions to be solved in 80 min, everyone got 3 questions from a pool of questions.\nCoding Questions Christmas Gifts: There are N chocolates and M toys, a gift box can have either X chocolates and Y toys or X toys and Y chocolates.","title":""},{"content":"Samsung Semiconductor India Research Details Job Status Internship Only\nCriteria Study Cutoff X % XII % UG 7 GPA No Backlogs Compensation FTE Internship Base \u0026ndash; 50K Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC \u0026ndash; \u0026ndash; Round 1 05/10/23\nOne section with 3 coding questions for 70 min.\nCoding Questions Alternate Levels: Given the root of a binary tree, return the sum of all the nodes in the alternate levels of a binary tree starting from the root. If the root is null then return 0. int solve(TreeNode *root) { if (root == nullptr) { return 0; } int res = 0; int level = 0; queue\u0026lt;TreeNode *\u0026gt; q; q.push(root); while (!q.empty()) { int n = q.size(); while (n--) { TreeNode *t = q.front(); q.pop(); if (level % 0 == 0) { res += t-\u0026gt;data; } if (t-\u0026gt;left) { q.push(t-\u0026gt;left); } if (t-\u0026gt;right) { q.push(t-\u0026gt;right); } } ++level; } return res; } Number of Components: Given an m*n binary matrix, a connected component is a set of 1\u0026rsquo;s that can be reached 8-directionally. Return the number of connected components. This is basically Number of Islands on LeetCode but 8-dxns\nint solve(int **graph, int m, int n) { set\u0026lt;pair\u0026lt;int, int\u0026gt;\u0026gt; visited; auto dfs = [\u0026amp;] (auto self, int i, int j) { if (min(i, j) \u0026lt; 0 || i \u0026gt;= m || j \u0026gt;= n) { return; } if (visited.find({i, j}) != visited.end() || graph[i][j] == 0) { return; } visited.insert({i, j}); self(self, i, j + 1); self(self, i + 1, j); self(self, i, j - 1); self(self, i - 1, j); self(self, i - 1, j + 1); self(self, i - 1, j - 1); self(self, i + 1, j + 1); self(self, i + 1, j - 1); } for (int i = 0; i \u0026lt; m; ++i) { for (int j = 0; j \u0026lt; n; ++j) { if (visited.find({i, j}) == visited.end() \u0026amp;\u0026amp; graph[i][j] != 0) { dfs(dfs, i, j); ++res; } } } return res; } Next Palindrome: Given a number as a string, find the first number greater than the current one that is a palindrome. void helper(char *num, int n, bool *isPalin) { int l = 0; int r = n - 1; int p, t, oldr; char c; while (l \u0026lt; r) { if (num[l] != num[r]) { oldr = num[r]; num[r] = num[l]; if (oldr \u0026gt; num[l]) { t = r - 1; while (t \u0026gt; 0) { c = num[t]; p = atoi(c); ++p; if (p \u0026lt; 10) { num[t] = p + \u0026#39;0\u0026#39;; break; } else { num[t] = \u0026#39;0\u0026#39;; } --t; } } } ++l; --r; } if (l \u0026gt;= r) { isPalin = true; } } int solve(char *num) { int len = 0; while (num[len] != \u0026#39;\\0\u0026#39;) { ++len; } bool isPalin = false; while (!isPalin) { helper(num, len, \u0026amp;isPalin); } return num; } Not sure if this would pass hidden cases, did pass the visible ones.\n","permalink":"https://manasch.github.io/placements/code/samsung_semiconductor/","summary":"Samsung Semiconductor India Research Details Job Status Internship Only\nCriteria Study Cutoff X % XII % UG 7 GPA No Backlogs Compensation FTE Internship Base \u0026ndash; 50K Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC \u0026ndash; \u0026ndash; Round 1 05/10/23\nOne section with 3 coding questions for 70 min.\nCoding Questions Alternate Levels: Given the root of a binary tree, return the sum of all the nodes in the alternate levels of a binary tree starting from the root.","title":""},{"content":"Sandvine Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 7.5 GPA Compensation FTE Internship Base 1250000 60000 Stocks 62500 \u0026ndash; Bonus 100000 \u0026ndash; Benefits 225410 \u0026ndash; CTC 1637910 \u0026ndash; Full Time: Training Cost Recovery of Rs.2,00,000 if candidate leaves in one year of time\nInternship: Training Cost Recovery of Rs. 1,00,000 if candidate leaves in 6 months’ time\nRound 1 - Coding Round 22/08/23\n3 Sections;\nAptitude (15) MCQ (27?) Algorithm (3) Coding but no test cases, text box to type the algo or code Coding Questions Elevator: An elevator can go to any of 5 floors up at once, if it goes 5 floors up, then it has to go 3 down, find the minimum number of steps it requires to reach any particular floor. BT to BST: Write code to convert a Binary Tree to Binary Search Tree Hashing Servers: Write a template to distribute user request network traffic across multiple servers. Round 2 - Technical Interview About Me Technical Databases Compression Algos Big Table vs RDBMS Discuss code written during round 1. Round 3 - HR / Technical Interview HR Questions Resume Based. ","permalink":"https://manasch.github.io/placements/code/sandvine/","summary":"Sandvine Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 7.5 GPA Compensation FTE Internship Base 1250000 60000 Stocks 62500 \u0026ndash; Bonus 100000 \u0026ndash; Benefits 225410 \u0026ndash; CTC 1637910 \u0026ndash; Full Time: Training Cost Recovery of Rs.2,00,000 if candidate leaves in one year of time\nInternship: Training Cost Recovery of Rs. 1,00,000 if candidate leaves in 6 months’ time\nRound 1 - Coding Round 22/08/23","title":""},{"content":"Schneider Electric Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 12LPA/12.5LPA 35000 Round 1 28/08/23\nOnline Assessment MCQ\u0026rsquo;s based on aptitude, analytical, electronics, technical. Round 2 Technical Interview DSA question: How to detect a cycle in a linked list Rate yourself on a scale of 1 - 10 for a given techstack (MERN/MEAN), questions asked accordingly. Database design question Round 3 HR Interview HR Questions Resume Based. ","permalink":"https://manasch.github.io/placements/code/schneider_electric/","summary":"Schneider Electric Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 12LPA/12.5LPA 35000 Round 1 28/08/23\nOnline Assessment MCQ\u0026rsquo;s based on aptitude, analytical, electronics, technical. Round 2 Technical Interview DSA question: How to detect a cycle in a linked list Rate yourself on a scale of 1 - 10 for a given techstack (MERN/MEAN), questions asked accordingly.","title":""},{"content":"Societe Generalte Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 60% XII 60% UG 6 GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 1221255 \u0026ndash; Round 1 06/09/23\nCoding Questions Number of Pairs: Given a string of characters, find the total number of pairs that can be formed of the same character. Ex: aaaaabb can have 2 pairs of a and 1 pair of b. Min Swap Greatest Even Number: Given a number as a string, find the greatest even number that can be made with just one swap, it is given that atleast one even digit exists. If the number is odd, then the last digit has to be switched with some other, so find the first even number the odd number is greater than if not, swap it with the rightmost even number, if it is even, then find two numbers two swap such that it is the greatest.\n","permalink":"https://manasch.github.io/placements/code/societe_generale/","summary":"Societe Generalte Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 60% XII 60% UG 6 GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 1221255 \u0026ndash; Round 1 06/09/23\nCoding Questions Number of Pairs: Given a string of characters, find the total number of pairs that can be formed of the same character. Ex: aaaaabb can have 2 pairs of a and 1 pair of b.","title":""},{"content":"Sprinklr Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 6 GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 12LPA 40000 Round 1 02/09/23\nMCQ (72) - Technical, Aptitude Coding (2) Coding Questions Smallest Common Substring: Given two strings, find the number of mappings of the common substrings between the two stirngs. Don\u0026rsquo;t have to consider subtrings, since they\u0026rsquo;re asking for smallest, it just becomes the individual characters. Create a charCount for both and multiply and add the count for each character.\nSubstrings ending with same characters: Given a string, and p ranges (S[1..2] or S[1..6]). Find the number of substring in the ranges such that the end characters are the same. ","permalink":"https://manasch.github.io/placements/code/sprinklr/","summary":"Sprinklr Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 6 GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 12LPA 40000 Round 1 02/09/23\nMCQ (72) - Technical, Aptitude Coding (2) Coding Questions Smallest Common Substring: Given two strings, find the number of mappings of the common substrings between the two stirngs. Don\u0026rsquo;t have to consider subtrings, since they\u0026rsquo;re asking for smallest, it just becomes the individual characters.","title":""},{"content":"Swym Details Job Status (Internship + Full Time Employment Mandatory)\nCriteria None mentiond\nCompensation Associate Software Engineer\nFTE Internship Gross 15 L \u0026ndash; CTC 20 L \u0026ndash; (All shortlisted candidates were gifted Infinity-JBL headphones worth Rs 999)\nCustomer Experience Engineer\nFTE Internship Gross 10 L \u0026ndash; CTC 14 L \u0026ndash; Round 1 09/08/23\nFirst round was conducted in 4 batches for Associate Software Engineer, Customer Experience Engineer was on 10/08/23. Each batch had different questions, some did repeat though.\nThere were 4 sections.\nScenario Based Questions (6) Aptitude MCQ Coding (3) Coding Questions Captcha Validity: Given N string, the captcha is valid if for each string, the frequence of each unique character in the string is the same. Otherwise invalid. Profile Picture: Given S, W, H, if either W or H is less than S, print \u0026ldquo;CHANGE\u0026rdquo;, otherwise if it\u0026rsquo;s a square print \u0026ldquo;ACCEPTED\u0026rdquo; else print \u0026ldquo;CROP\u0026rdquo;. 2D Array Less Than: Given a 2D matrix, return count of for i \u0026lt; j, arr[i] \u0026gt; arr[j]. Infinite 1D Jungle: Given M, choose starting position from 1 - M (included) such that most number of places is visited. For all N, if N is even, go to N / 2, if N is odd go to 3 * N + 1. Round 2 (ASE) 10/08/23\nThe second round for ASE was in the form of an assignment. The shortlisted candidates were told to choose one of two assignment statements, and given 4 hours to complete the code, create a repo and 1 additional hour to create a video demo and a README file containing:\nexplanation technologies used how to install and run At the end of this 5-hour round, best solutions were selected and the candidate was asked to present to a panel of judges. This was followed by HR round and then results.\nAssignments The two assignment choices given were different for each candidate, but the themes were the same:\nAssignment 1: Database + UI Assignment 2: Data Processing + ML/Data Analytics ","permalink":"https://manasch.github.io/placements/code/swym/","summary":"Swym Details Job Status (Internship + Full Time Employment Mandatory)\nCriteria None mentiond\nCompensation Associate Software Engineer\nFTE Internship Gross 15 L \u0026ndash; CTC 20 L \u0026ndash; (All shortlisted candidates were gifted Infinity-JBL headphones worth Rs 999)\nCustomer Experience Engineer\nFTE Internship Gross 10 L \u0026ndash; CTC 14 L \u0026ndash; Round 1 09/08/23\nFirst round was conducted in 4 batches for Associate Software Engineer, Customer Experience Engineer was on 10/08/23. Each batch had different questions, some did repeat though.","title":""},{"content":"Tesco Details Job Status Full Time (Employment only)\nCriteria Study Cutoff X % XII % UG 8 GPA Compensation FTE Internship Base 16,50,000 \u0026ndash; Joining Bonus 3,50,000 \u0026ndash; 98,111(retrials) \u0026ndash; CTC 20,98,111 \u0026ndash; Round 1 10/08/23\nHad 3 sections\nAptitude MCQ (25) - 30 min MCQ (10) - 20 min Coding (2) - 40 min Coding Questions Don\u0026rsquo;t print rows containing -1: Given a square 2D array of integers, don\u0026rsquo;t print rows that contain -1 Index at which it becomes greater: Given N and P, form a circle of all the primes under N (including) and start from 2 and keep adding values in clockwise manner till the sum becomes greater than P, return the index at which the sum crosses P. void generatePrimes(int n, vector\u0026lt;int\u0026gt;\u0026amp; primes) { primes.clear(); vector\u0026lt;bool\u0026gt; isPrime(n + 1, true); for (int i = 2; i * i \u0026lt;= n; ++i) { if (isPrime[i]) { for (int j = i * i; j \u0026lt;= n; j += i) { isPrime[j] = false; } } } for (int i = 2; i \u0026lt;= n; ++i) { if (isPrime[i]) { primes.push_back(i); } } } int solve(int n, int p) { vector\u0026lt;int\u0026gt; primes; generatePrimes(n, primes); int idx = 0; int s = 0; while (s \u0026gt; p) { s += primes[idx % primes.size()]; ++idx; } return (idx - 1) % primes.size(); } ","permalink":"https://manasch.github.io/placements/code/tesco/","summary":"Tesco Details Job Status Full Time (Employment only)\nCriteria Study Cutoff X % XII % UG 8 GPA Compensation FTE Internship Base 16,50,000 \u0026ndash; Joining Bonus 3,50,000 \u0026ndash; 98,111(retrials) \u0026ndash; CTC 20,98,111 \u0026ndash; Round 1 10/08/23\nHad 3 sections\nAptitude MCQ (25) - 30 min MCQ (10) - 20 min Coding (2) - 40 min Coding Questions Don\u0026rsquo;t print rows containing -1: Given a square 2D array of integers, don\u0026rsquo;t print rows that contain -1 Index at which it becomes greater: Given N and P, form a circle of all the primes under N (including) and start from 2 and keep adding values in clockwise manner till the sum becomes greater than P, return the index at which the sum crosses P.","title":""},{"content":"Thorogood Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 75% XII 75% UG 7.5 GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 1415400 35000 Round 1 16/09/23\n3 Sections, no coding\nCommunication Section Aptitude (5) About Thorogood ","permalink":"https://manasch.github.io/placements/code/thorogood/","summary":"Thorogood Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 75% XII 75% UG 7.5 GPA Compensation FTE Internship Base \u0026ndash; \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC 1415400 35000 Round 1 16/09/23\n3 Sections, no coding\nCommunication Section Aptitude (5) About Thorogood ","title":""},{"content":"Truminds Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 80% XII 80% UG 8 GPA 45 People with 9+ were shortlisted Compensation FTE Internship Base 600000 \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus 500000 \u0026ndash; CTC 1100000LPA 20000 Bonus\nJoining Bonus - 1,00,000\nRetention Bonus - 4,00,000\nRound 1 - Coding Round 10/09/23\n18 MCQs and 1 coding. Questions were different for everyone.\nCoding Questions String selection: Given N strings where each string is given in the form of an array int of size 26, where the h\u0026rsquo;th element in the string array denotes the count of #h character of lowercase English alphabets in the string. You have to select exactly 4 strings and insert the strings into a Trie. You are allowed to shuffle the characters in each string. Find the minimum number of nodes present in Trie if the strings are selected optimally. Round 2 - Technical Interview Completely based on Resume. Was asked to explain projects and asked basic questions on core subjects. Interview was easy.\nGave 2 approaches for solving anagrams problem and asked which has less time complexity. One approach used 2 for loops (n^2) and other was based on sorting (nlogn). Round 3 - Interview with CEO I was asked questions on various topics in computer science. Questions were not hard. Some people were only asked hr questions.\n","permalink":"https://manasch.github.io/placements/code/truminds/","summary":"Truminds Details Job Status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X 80% XII 80% UG 8 GPA 45 People with 9+ were shortlisted Compensation FTE Internship Base 600000 \u0026ndash; Stocks \u0026ndash; \u0026ndash; Bonus 500000 \u0026ndash; CTC 1100000LPA 20000 Bonus\nJoining Bonus - 1,00,000\nRetention Bonus - 4,00,000\nRound 1 - Coding Round 10/09/23\n18 MCQs and 1 coding. Questions were different for everyone.\nCoding Questions String selection: Given N strings where each string is given in the form of an array int of size 26, where the h\u0026rsquo;th element in the string array denotes the count of #h character of lowercase English alphabets in the string.","title":""},{"content":"Urban Company Details Job status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 8 GPA Compensation FTE Internship Base 16,00,000 50000 ESOP vested across 4 years 8,00,000 \u0026ndash; Joining Bonus 3,00,000 \u0026ndash; Retention Bonus 3,00,000 \u0026ndash; OA 31/07/23\nQuestions Black and White tree: Given a tree with N vertices labeled 1-N rooted at 1. The tree is an undirected graph with N-1 edges. Each edge i connects two vertices ai and bi. Each vertex i is colored either white (0) or black (1).\nThe beauty of a vertex i is the number of paths in its subtree that have end vertices of the opposite color.\nFind the beauty of all N vertices.\nNote: A subtree of a vertex i is a connected sub-graph consisting of all the descendants of i including i. Perform dfs and get number of blacks and whites at each vertex and multiply them and store in dp.\n#include\u0026lt;bits/stdc++.h\u0026gt; using namespace std; vector\u0026lt;int\u0026gt; dfs(int i, vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt;\u0026amp; graph, unordered_set\u0026lt;int\u0026gt;\u0026amp; visited, vector\u0026lt;int\u0026gt;\u0026amp; result) { if (visited.find(i) != visited.end()) { return {0, 0}; } visited.insert(i); int black = 0, white = 0; vector\u0026lt;int\u0026gt; numC; for (auto j: graph[i]) { numC = dfs(j, graph, visited, result); black += numC[0]; white += numC[1]; } string[i - 1] == \u0026#39;1\u0026#39; ? ++black : ++white; result[i - 1] = black * white; return {black, white}; } vector\u0026lt;int\u0026gt; solve(int N, string Color, vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; Edges) { vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; graph(N + 1); unordered_set\u0026lt;int\u0026gt; visited; vector\u0026lt;int\u0026gt; result(N); for (auto edge: Edges) { graph[edge[0]].push_back(edge[1]); graph[edge[1]].push_back(edge[0]); } dfs(1, graph, visited, result); return result; } This TLE\u0026rsquo;d by 0.005s for 3 cases while the other 7 passed.\nMinimum Value Falling Apples ","permalink":"https://manasch.github.io/placements/code/urban_company/","summary":"Urban Company Details Job status Full Time (Employment + Internship Mandatory)\nCriteria Study Cutoff X % XII % UG 8 GPA Compensation FTE Internship Base 16,00,000 50000 ESOP vested across 4 years 8,00,000 \u0026ndash; Joining Bonus 3,00,000 \u0026ndash; Retention Bonus 3,00,000 \u0026ndash; OA 31/07/23\nQuestions Black and White tree: Given a tree with N vertices labeled 1-N rooted at 1. The tree is an undirected graph with N-1 edges. Each edge i connects two vertices ai and bi.","title":""},{"content":"Zynga Details Job Status Internship Only\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base \u0026ndash; 80000 Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC \u0026ndash; \u0026ndash; Round 1 13/10/23\nCoding Questions Longest Increasing Subsequence Decode Ways Polynomial Addition ","permalink":"https://manasch.github.io/placements/code/zynga/","summary":"Zynga Details Job Status Internship Only\nCriteria Study Cutoff X % XII % UG GPA Compensation FTE Internship Base \u0026ndash; 80000 Stocks \u0026ndash; \u0026ndash; Bonus \u0026ndash; \u0026ndash; CTC \u0026ndash; \u0026ndash; Round 1 13/10/23\nCoding Questions Longest Increasing Subsequence Decode Ways Polynomial Addition ","title":""},{"content":"July, 2023 Mon Tue Wed Thu Fri Sat Sun - - - - - 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 - - - - - - August, 2023 Mon Tue Wed Thu Fri Sat Sun - 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 - - - September, 2023 Mon Tue Wed Thu Fri Sat Sun - - - - 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 - October, 2023 Mon Tue Wed Thu Fri Sat Sun - - - - - - 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 - - - - - November, 2023 Mon Tue Wed Thu Fri Sat Sun - - 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 - - - ","permalink":"https://manasch.github.io/placements/calendar/","summary":"July, 2023 Mon Tue Wed Thu Fri Sat Sun - - - - - 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 - - - - - - August, 2023 Mon Tue Wed Thu Fri Sat Sun - 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 - - - September, 2023 Mon Tue Wed Thu Fri Sat Sun - - - - 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 - October, 2023 Mon Tue Wed Thu Fri Sat Sun - - - - - - 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 - - - - - November, 2023 Mon Tue Wed Thu Fri Sat Sun - - 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 - - - ","title":"Calendar"},{"content":"November, 2023 01-11-2023, Wednesday Test Paypal: - Test Mode: Online - Test Time: 18:00 October, 2023 31-10-2023, Tuesday Interview Juniper Networks: - Process: Offline - Time: 09:00 26-10-2023, Thursday Test Juniper Networks: - Test Mode: Offline - Test Time: 19:00 Interview Zebra Tech: - Process: Offline - Time: Not Mentioned 20-10-2023, Friday Register Intel: - Tier: Not Mentioned - Offer: Internship - Deadline: 09:00 Test Zebra Tech: - Test Mode: Offline - Test Time: 09:30 Interview AstraZeneca: - Process: Offline - Time: 09:00 19-10-2023, Thursday Register Nextuple: - Tier: T-2 - Offer: FTE, Internship - Deadline: EOD CRK Gida: - Tier: T-2 - Offer: FTE - Deadline: EOD Zebra Tech: - Tier: T-2 - Offer: Internship - Deadline: 08:00 18-10-2023, Wednesday Register BlueYonder: - Tier: T-1 - Offer: FTE, Internship - Deadline: 09:00 Test AstraZeneca: - Test Mode: Online - Test Time: Not Mentioned Samsung Research Institute: - Test Mode: Online - Test Time: 19:00 Interview IDFY: - Process: Offline - Time: 09:00 Microchip: - Process: Offline - Time: Not Mentioned 17-10-2023, Tuesday Register AstraZeneca: - Tier: T-2 - Offer: FTE, Internship - Deadline: 09:00 Test Microchip: - Test Mode: Online - Test Time: 07:00 Interview Zynga: - Process: Offline - Time: Not Mentioned 16-10-2023, Monday Register IDFY: - Tier: T-2 - Offer: FTE, Internship - Deadline: EOD Test IDFY: - Test Mode: Online - Test Time: 18:00 Perfios: - Test Mode: Offline - Test Time: 09:30 Interview Perfios: - Process: Offline - Time: 11:30 14-10-2023, Saturday Register Samsung Research Institute: - Tier: Not Mentioned - Offer: Internship - Deadline: EOD Microchip: - Tier: T-2 - Offer: FTE, Internship - Deadline: 16:30 Test Aurva.io: - Test Mode: Online - Test Time: 17:00 13-10-2023, Friday Test Zynga: - Test Mode: Online - Test Time: 17:30 12-10-2023, Thursday Register Aurva.io: - Tier: T-1 - Offer: FTE, Internship - Deadline: 10:00 Perfios: - Tier: T-2 - Offer: FTE, Internship - Deadline: 10:30 Interview Tejas Networks: - Process: Offline - Time: 09:00 11-10-2023, Wednesday Register Juniper Networks: - Tier: T-1 - Offer: Internship, PPO - Deadline: EOD Collins Aerospace: - Tier: T-2 - Offer: FTE, Internship - Deadline: 10:00 Interview Infibeam: - Process: Offline - Time: 10:00 10-10-2023, Tuesday Test Tejas Networks: - Test Mode: Offline - Test Time: 14:00 09-10-2023, Monday Register Zynga: - Tier: Not Mentioned - Offer: Internship - Deadline: 17:00 Apple: - Tier: T-1 - Offer: Internship, PPO - Deadline: 13:00 Test Confluent: - Test Mode: Offline - Test Time: Not Mentioned Interview Confluent: - Process: Offline - Time: Not Mentioned 07-10-2023, Saturday Test Infibeam: - Test Mode: Online - Test Time: Not Mentioned Hiver: - Test Mode: Online - Test Time: 19:00 Interview Pratt \u0026amp; Whitney: - Process: Offline - Time: 09:00 06-10-2023, Friday Interview Samsung Semiconductors: - Process: Online - Time: Not Mentioned Amadeus: - Process: Offline - Time: 09:00 05-10-2023, Thursday Register Samsung Semiconductors: - Tier: Not Mentioned - Offer: Not Mentioned - Deadline: 08:30 Infibeam: - Tier: T-2 - Offer: FTE, Internship - Deadline: 09:00 Aveva: - Tier: T-1 - Offer: FTE, Internship - Deadline: 09:00 Tejas Networks: - Tier: T-2 - Offer: FTE, Internship - Deadline: 10:00 Test Samsung Semiconductors: - Test Mode: Online - Test Time: 16:00 Pratt \u0026amp; Whitney: - Test Mode: Online - Test Time: 19:00 Amadeus: - Test Mode: Offline - Test Time: 09:00 Interview KPMG: - Process: Offline - Time: Not Mentioned 04-10-2023, Wednesday Register Hiver: - Tier: T-2 - Offer: FTE, Internship - Deadline: EOD Test KPMG: - Test Mode: Offline - Test Time: Not Mentioned 03-10-2023, Tuesday Register Pratt \u0026amp; Whitney: - Tier: T-2 - Offer: FTE, Internship - Deadline: 10:30 01-10-2023, Sunday Test ARM: - Test Mode: Online - Test Time: 10:00 September, 2023 30-09-2023, Saturday Register Siemens: - Tier: T-1 - Offer: FTE, Internship - Deadline: EOD 29-09-2023, Friday Test Deltax: - Test Mode: Online - Test Time: Not Mentioned Interview Deltax: - Process: Online - Time: Not Mentioned 28-09-2023, Thursday Register Confluent: - Tier: T-1 - Offer: Internship, PPO - Deadline: EOD 27-09-2023, Wednesday Register Deltax: - Tier: T-2 - Offer: FTE - Deadline: 09:00 Interview Dover: - Process: Online - Time: 10:00 Goldman Sachs: - Process: Offline - Time: Not Mentioned 26-09-2023, Tuesday Register KPMG: - Tier: T-3 - Offer: FTE, Internship - Deadline: 09:00 25-09-2023, Monday Register Paypal: - Tier: T-1 - Offer: FTE, Internship - Deadline: EOD Test Dover: - Test Mode: Online - Test Time: 18:00 Interview Broadridge: - Process: Offline - Time: 09:00 Arup India Pvt. Ltd.: - Process: Offline - Time: Not Mentioned 23-09-2023, Saturday Test SAP Labs: - Test Mode: Online - Test Time: 17:00 22-09-2023, Friday Register ARM: - Tier: T-1 - Offer: FTE, Internship - Deadline: 09:00 Interview British Telecom: - Process: Offline - Time: 09:00 21-09-2023, Thursday Register Dover: - Tier: T-2 - Offer: FTE, Internship - Deadline: 09:00 SAP Labs: - Tier: T-1 - Offer: FTE - Deadline: 09:00 Test Arup India Pvt. Ltd.: - Test Mode: Offline - Test Time: 09:00 Interview Morgan Stanley: - Process: Offline - Time: 09:00 20-09-2023, Wednesday Test Nvidia: - Test Mode: Online - Test Time: 19:30 Interview Thorogood: - Process: Offline - Time: 09:00 19-09-2023, Tuesday Test British Telecom: - Test Mode: Online - Test Time: 17:00 17-09-2023, Sunday Register Subex: - Tier: T-3 - Offer: Internship, PPO - Deadline: EOD Test Morgan Stanley: - Test Mode: Online - Test Time: 11:00 16-09-2023, Saturday Register Adobe: - Tier: Not Mentioned - Offer: Internship - Deadline: 09:00 British Telecom: - Tier: T-1 - Offer: FTE, Internship - Deadline: 09:00 Test Goldman Sachs: - Test Mode: Online - Test Time: 10:00 MakeMyTrip: - Test Mode: Online - Test Time: 11:00 Thorogood: - Test Mode: Online - Test Time: 17:00 15-09-2023, Friday Register Goldman Sachs: - Tier: T-2 - Offer: Internship, PPO - Deadline: 09:00 Test Broadridge: - Test Mode: Online - Test Time: 09:00 Interview Eli Lilly: - Process: Offline - Time: 09:00 IBM: - Process: Offline - Time: Not Mentioned Lam Research: - Process: Offline - Time: Not Mentioned 14-09-2023, Thursday Register Nvidia: - Tier: Not Mentioned - Offer: Internship - Deadline: 09:30 Morgan Stanley: - Tier: T-1 - Offer: FTE, Internship - Deadline: 09:00 MakeMyTrip: - Tier: T-1 - Offer: Internship, PPO - Deadline: 09:00 Test Eli Lilly: - Test Mode: Online - Test Time: 10:00 Interview Bain Capability: - Process: Online - Time: 09:30 13-09-2023, Wednesday Register Thorogood: - Tier: T-1 - Offer: FTE, Internship - Deadline: 09:00 Test Lam Research: - Test Mode: Online - Test Time: 18:00 Interview Trueminds: - Process: Offline - Time: 09:00 12-09-2023, Tuesday Register Broadridge: - Tier: T-2 - Offer: FTE, Internship - Deadline: 09:00 Eli Lilly: - Tier: T-2 - Offer: FTE - Deadline: 09:00 Interview Societe Generale: - Process: Offline - Time: Not Mentioned 11-09-2023, Monday Interview Deloitte: - Process: Offline - Time: Not Mentioned 10-09-2023, Sunday Test IBM: - Test Mode: Online - Test Time: 10:00 Trueminds: - Test Mode: Online - Test Time: 17:00 09-09-2023, Saturday Test Bain Capability: - Test Mode: Online - Test Time: 12:00 08-09-2023, Friday Test Accenture: - Test Mode: Offline - Test Time: 09:00 Interview HPE: - Process: Online - Time: 09:00 Natwest: - Process: Offline - Time: Not Mentioned 07-09-2023, Thursday Register Arup India Pvt. Ltd.: - Tier: T-2 - Offer: FTE, Internship - Deadline: EOD Tech Mahindra: - Tier: T-3 - Offer: FTE, Internship - Deadline: EOD IBM: - Tier: T-1 - Offer: FTE, Internship - Deadline: 09:00 06-09-2023, Wednesday Test Societe Generale: - Test Mode: Online - Test Time: 18:00 HPE: - Test Mode: Online - Test Time: 14:00 Interview Schneider Electric: - Process: Offline - Time: Not Mentioned 05-09-2023, Tuesday Register Societe Generale: - Tier: T-2 - Offer: FTE, Internship - Deadline: 17:00 Trueminds: - Tier: T-2 - Offer: FTE, Internship - Deadline: 09:00 04-09-2023, Monday Interview Sprinklr: - Process: Offline - Time: 10:00 03-09-2023, Sunday Register Bain Capability: - Tier: T-1 - Offer: FTE, Internship - Deadline: EOD Test Deloitte: - Test Mode: Online - Test Time: Not Mentioned 02-09-2023, Saturday Register Deloitte: - Tier: T-2 - Offer: FTE, Internship - Deadline: EOD Test Sprinklr: - Test Mode: Online - Test Time: 11:00 01-09-2023, Friday Test DXC: - Test Mode: Online - Test Time: 12:00 Interview Cisco: - Process: Online - Time: 08:00 August, 2023 31-08-2023, Thursday Register EY India: - Tier: T-2 - Offer: Not Mentioned - Deadline: 10:30 DXC: - Tier: T-3 - Offer: FTE - Deadline: 09:00 Interview Applied Materials: - Process: Offline - Time: Not Mentioned Volvo: - Process: Offline - Time: Not Mentioned 30-08-2023, Wednesday Register Sprinklr: - Tier: T-1 - Offer: FTE, Internship - Deadline: 09:00 Test Dish: - Test Mode: Offline - Test Time: 09:00 Interview Dish: - Process: Offline - Time: 13:00 29-08-2023, Tuesday Register Applied Materials: - Tier: T-2 - Offer: FTE, Internship - Deadline: 11:00 Dish: - Tier: T-1 - Offer: FTE, Internship - Deadline: 09:00 Amadeus: - Tier: T-1 - Offer: FTE, Internship - Deadline: 08:30 Test Applied Materials: - Test Mode: Online - Test Time: 19:00 Natwest: - Test Mode: Offline - Test Time: 15:00 Cisco: - Test Mode: Offline - Test Time: 08:00 Interview Kickdrum: - Process: Offline - Time: Not Mentioned 28-08-2023, Monday Test Schneider Electric: - Test Mode: Online - Test Time: 16:00 Interview Epsilon: - Process: Offline - Time: 09:00 27-08-2023, Sunday Test CynLr: - Test Mode: Online - Test Time: 10:00 26-08-2023, Saturday Register HPE: - Tier: T-1 - Offer: FTE, Internship - Deadline: EOD Test Volvo: - Test Mode: Offline - Test Time: Not Mentioned 25-08-2023, Friday Register Schneider Electric: - Tier: T-2 - Offer: FTE, Internship - Deadline: 08:30 Volvo: - Tier: T-3 - Offer: FTE, Internship - Deadline: EOD Test AMETEK: - Test Mode: Offline - Test Time: Not Mentioned Kickdrum: - Test Mode: Online - Test Time: Not Mentioned Baxter: - Test Mode: Offline - Test Time: Not Mentioned Interview AMETEK: - Process: Offline - Time: Not Mentioned Baxter: - Process: Offline - Time: Not Mentioned 24-08-2023, Thursday Register AMETEK: - Tier: Not Mentioned - Offer: Internship - Deadline: EOD Test Epsilon: - Test Mode: Offline - Test Time: 15:00 Sahaj: - Test Mode: Offline - Test Time: Not Mentioned Interview Sahaj: - Process: Offline - Time: Not Mentioned Hyperface Tech: - Process: Offline - Time: Not Mentioned 23-08-2023, Wednesday Register Natwest: - Tier: T-1 - Offer: FTE, Internship - Deadline: EOD CynLr: - Tier: T-2 - Offer: FTE, Internship - Deadline: 09:00 Test Newfold Digital: - Test Mode: Online - Test Time: 08:00 Interview Cloudera: - Process: Offline - Time: 09:00 22-08-2023, Tuesday Register Cisco: - Tier: T-1 - Offer: FTE, Internship - Deadline: 17:00 Epsilon: - Tier: T-2 - Offer: FTE, Internship - Deadline: 09:00 Test Sandvine: - Test Mode: Offline - Test Time: 08:30 Interview Sandvine: - Process: Offline - Time: 14:00 21-08-2023, Monday Register Kickdrum: - Tier: T-2 - Offer: FTE, Internship - Deadline: 09:00 Test Cloudera: - Test Mode: Online - Test Time: 17:00 Interview Egnyte: - Process: Offline - Time: Not Mentioned 19-08-2023, Saturday Test Egnyte: - Test Mode: Online - Test Time: Not Mentioned 18-08-2023, Friday Register Baxter: - Tier: T-2 - Offer: FTE, Internship - Deadline: 12:00 Sahaj: - Tier: T-1 - Offer: FTE, Internship - Deadline: 12:00 Test Hyperface Tech: - Test Mode: Offline - Test Time: 09:00 17-08-2023, Thursday Test Arista: - Test Mode: Offline - Test Time: 09:00 Interview Arista: - Process: Offline - Time: 11:00 16-08-2023, Wednesday Interview Deutsche: - Process: Offline - Time: 09:00 15-08-2023, Tuesday Register Cloudera: - Tier: T-1 - Offer: FTE, Internship - Deadline: EOD 13-08-2023, Sunday Register Egnyte: - Tier: T-1 - Offer: FTE, Internship - Deadline: EOD 11-08-2023, Friday Register Oracle: - Tier: T-1 - Offer: FTE - Deadline: 13:00 Arista: - Tier: T-1 - Offer: FTE, Internship - Deadline: 09:00 Test Deutsche: - Test Mode: Online - Test Time: Not Mentioned Interview Tesco: - Process: Offline - Time: 09:15 10-08-2023, Thursday Register Tesco: - Tier: T-1 - Offer: FTE - Deadline: 09:00 Test Tesco: - Test Mode: Online - Test Time: 21:00 Interview Swym: - Process: Offline - Time: 10:00 09-08-2023, Wednesday Register Newfold Digital: - Tier: T-2 - Offer: FTE, Internship - Deadline: 14:00 Hyperface Tech: - Tier: T-1 - Offer: FTE, Internship - Deadline: 09:00 Test Swym: - Test Mode: Online - Test Time: Not Mentioned Couchbase: - Test Mode: Not Mentioned - Test Time: Not Mentioned Interview Couchbase: - Process: Offline - Time: 08:00 08-08-2023, Tuesday Register Sandvine: - Tier: T-1 - Offer: FTE, Internship - Deadline: 09:00 Test PWC: - Test Mode: Offline - Test Time: Not Mentioned Interview Ring Central: - Process: Offline - Time: 09:00 07-08-2023, Monday Interview Pure Storage: - Process: Offline - Time: 09:00 06-08-2023, Sunday Test Ring Central: - Test Mode: Online - Test Time: 12:00 05-08-2023, Saturday Register Deutsche: - Tier: T-1 - Offer: FTE - Deadline: 09:00 Swym: - Tier: T-1 - Offer: FTE, Internship - Deadline: EOD Lam Research: - Tier: T-1 - Offer: FTE, Internship - Deadline: EOD 04-08-2023, Friday Register Couchbase: - Tier: T-1 - Offer: FTE, Internship - Deadline: 20:00 Interview Commvault: - Process: Offline - Time: 09:00 02-08-2023, Wednesday Register Ring Central: - Tier: T-1 - Offer: FTE, Internship - Deadline: 20:00 Test Pure Storage: - Test Mode: Online - Test Time: 19:00 Interview Urban Company: - Process: Offline - Time: 09:30 01-08-2023, Tuesday Register Pure Storage: - Tier: T-1 - Offer: FTE, Internship - Deadline: 09:00 Test Commvault: - Test Mode: Offline - Test Time: 11:30 July, 2023 31-07-2023, Monday Test Urban Company: - Test Mode: Online - Test Time: 19:00 Interview Intuit: - Process: Offline - Time: 09:00 29-07-2023, Saturday Register Urban Company: - Tier: T-1 - Offer: FTE, Internship - Deadline: 09:00 27-07-2023, Thursday Test Intuit: - Test Mode: Online - Test Time: 18:00 25-07-2023, Tuesday Register Commvault: - Tier: T-1 - Offer: FTE, Internship - Deadline: 10:30 Intuit: - Tier: T-1 - Offer: FTE, Internship - Deadline: 01:30 13-07-2023, Thursday Register Accenture: - Tier: T-3 - Offer: FTE, Internship - Deadline: EOD ","permalink":"https://manasch.github.io/placements/schedule/","summary":"November, 2023 01-11-2023, Wednesday Test Paypal: - Test Mode: Online - Test Time: 18:00 October, 2023 31-10-2023, Tuesday Interview Juniper Networks: - Process: Offline - Time: 09:00 26-10-2023, Thursday Test Juniper Networks: - Test Mode: Offline - Test Time: 19:00 Interview Zebra Tech: - Process: Offline - Time: Not Mentioned 20-10-2023, Friday Register Intel: - Tier: Not Mentioned - Offer: Internship - Deadline: 09:00 Test Zebra Tech: - Test Mode: Offline - Test Time: 09:30 Interview AstraZeneca: - Process: Offline - Time: 09:00 19-10-2023, Thursday Register Nextuple: - Tier: T-2 - Offer: FTE, Internship - Deadline: EOD CRK Gida: - Tier: T-2 - Offer: FTE - Deadline: EOD Zebra Tech: - Tier: T-2 - Offer: Internship - Deadline: 08:00 18-10-2023, Wednesday Register BlueYonder: - Tier: T-1 - Offer: FTE, Internship - Deadline: 09:00 Test AstraZeneca: - Test Mode: Online - Test Time: Not Mentioned Samsung Research Institute: - Test Mode: Online - Test Time: 19:00 Interview IDFY: - Process: Offline - Time: 09:00 Microchip: - Process: Offline - Time: Not Mentioned 17-10-2023, Tuesday Register AstraZeneca: - Tier: T-2 - Offer: FTE, Internship - Deadline: 09:00 Test Microchip: - Test Mode: Online - Test Time: 07:00 Interview Zynga: - Process: Offline - Time: Not Mentioned 16-10-2023, Monday Register IDFY: - Tier: T-2 - Offer: FTE, Internship - Deadline: EOD Test IDFY: - Test Mode: Online - Test Time: 18:00 Perfios: - Test Mode: Offline - Test Time: 09:30 Interview Perfios: - Process: Offline - Time: 11:30 14-10-2023, Saturday Register Samsung Research Institute: - Tier: Not Mentioned - Offer: Internship - Deadline: EOD Microchip: - Tier: T-2 - Offer: FTE, Internship - Deadline: 16:30 Test Aurva.","title":"Schedule"}]